{"version":3,"sources":["lib/helper.js","components/media-player.js","components/recent-tile.js","components/playlist-item.js","components/recent-carousel.js","components/suggestion-tile.js","lib/endpoints.js","components/loader.js","components/search-box.js","components/item-menu.js","contexts/toast-context.js","lib/config.js","components/signin-and-sync.js","components/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Helper","unescape","data","span","document","createElement","innerHTML","innerText","formatSeconds","timeInSeconds","minutes","parseInt","toString","seconds","length","repeat","completionPercentage","currentTime","duration","downloadJson","filename","json","element","setAttribute","encodeURIComponent","JSON","stringify","style","display","body","appendChild","click","removeChild","downloadSong","song","media_url","defaultSong","singers","play_count","label","image","MusicPlayer","nextSong","prevSong","isMusicPlayerVisible","setIsMusicPlayerVisible","useState","setPaused","volume","setVolume","setDuration","setCurrentTime","Audio","player","setPlayer","useEffect","audioPlayer","onloadedmetadata","event","play","onerror","error","console","log","code","message","src","Date","getTime","load","onwaiting","_","onended","ontimeupdate","target","info","pause","removeAttribute","onClick","className","stopPropagation","width","height","alt","paused","Slider","value","onChange","time","title","Grid","item","xs","margin","color","v","aria-labelledby","RecentTile","recent","songIndex","playSong","image_500","album","PlaylistItem","playingList","selectedPlaylist","playlists","addToPlaylist","removeFromPlaylist","isMenuOpen","setIsMenuOpen","onMouseLeave","IconButton","Favorite","htmlColor","isFavorite","MoreHoriz","map","playlistName","key","RecentCarousal","children","settings","dots","infinite","slidesToShow","slidesToScroll","responsive","breakpoint","arrows","SuggestionTile","suggestion","setIsFocused","baseURL","Endpoints","search","query","socketURL","signIn","syncUp","syncDown","Loader","size","borderRightColor","SearchBox","suggestions","setSuggestions","isSidebarOpen","setIsSidebarOpen","isLoading","setIsLoading","isFocused","setQuery","debounceQuery","useCallback","debounce","Axios","get","then","response","clearSuggestions","selectSong","Number","isInteger","borderTopLeftRadius","borderTopRightRadius","borderBottom","borderRadius","placeholder","trim","cancel","fontSize","id","ItemMenu","buttons","small","e","b","index","action","ToastContext","React","createContext","withToast","Component","props","Consumer","toast","ToastNotifier","toasts","removeToast","type","timestamp","SignInAndSync","onSignIn","onSignInError","user","syncToServer","syncFromServer","picture","name","email","clientId","config","buttonText","onSuccess","render","renderProps","disabled","onFailure","isSignedIn","cookiePolicy","Sidebar","addPlaylist","removePlaylist","selectPlaylist","addToast","closeSidebar","newPlaylistName","setNewPlaylistName","Object","keys","safeSelectPlaylist","onKeyDown","position","right","top","Add","App","setUser","setPlayingList","setSelectedPlaylist","setPlaylists","setToasts","listeners","updatePlaylist","playlistContent","updatePlaylists","newPlaylists","localStorage","setItem","oldPlaylist","indexOfSongInOldList","findIndex","s","newPlaylist","splice","r","Math","random","push","setTimeout","newToast","find","t","playlistFromLocal","getItem","recentPlaylist","favoritePlaylist","playlistsToUpdate","parsedPlaylists","parse","Recent","err","forEach","l","clearTimeout","Provider","googleUser","headers","Authorization","tokenId","catch","post","token","includes","Menu","MusicNote","typeof","playListName","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","ReactDOM","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4af21dcc.chunk.js","sourcesContent":["const Helper = {\n    unescape: data => {\n        const span = document.createElement('span');\n        span.innerHTML = data;\n        return span.innerText;\n    },\n    formatSeconds: (timeInSeconds = 0) => {\n        let minutes = parseInt(timeInSeconds / 60).toString();\n        let seconds = parseInt(timeInSeconds % 60).toString();\n\n        if (minutes.length < 2) {\n            minutes = \"0\".repeat(2 - minutes.length) + minutes;\n        }\n\n        if (seconds.length < 2) {\n            seconds = \"0\".repeat(2 - seconds.length) + seconds;\n        }\n\n        return minutes + \":\" + seconds;\n    },\n    completionPercentage: (currentTime, duration) => (currentTime / duration) * 100,\n    downloadJson: (filename, json) => {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json, null, 4)));\n        element.setAttribute('download', filename);\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n    },\n    downloadSong: (song) => {\n        var element = document.createElement('a');\n        element.setAttribute('href', song.media_url);\n        element.setAttribute('target', \"_blank\");\n        element.setAttribute('download', song.song + \".mp4\");\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n    },\n}\nexport default Helper;","import React, { useEffect, useState } from 'react'\nimport Helper from '../lib/helper';\nimport { Grid, Slider } from '@material-ui/core';\n\n\n\nconst defaultSong = {\n    song: \"Some Song\",\n    singers: \"Some Singer\",\n    play_count: 9999999,\n    media_url: \"\",\n    label: \"Some Label\",\n    image: \"https://images.unsplash.com/photo-1573247353133-0290e4606fbf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n}\n\nexport default function MusicPlayer({\n    song,\n    nextSong,\n    prevSong,\n    isMusicPlayerVisible,\n    setIsMusicPlayerVisible,\n}) {\n\n    if (!song) {\n        song = defaultSong;\n    }\n\n    // player internal states\n    // eslint-disable-next-line no-unused-vars\n    const [paused, setPaused] = useState(true);\n    const [volume, setVolume] = useState(0.3);\n    const [duration, setDuration] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n\n    const [player, setPlayer] = useState(new Audio());\n\n    // Load the song and initialize the player\n    useEffect(() => {\n        if (song) {\n            const audioPlayer = new Audio(song.media_url);\n            audioPlayer.volume = volume;\n            setPlayer(audioPlayer);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [song]);\n\n    useEffect(() => {\n        if (player) {\n            // after loading metadata\n            player.onloadedmetadata = event => {\n                setDuration(player.duration);\n                setCurrentTime(player.currentTime);\n                play();\n            };\n\n            // Handle error\n            player.onerror = error => {\n                error = player.error;\n                console.log(\"Error \" + player.error.code + \"; details: \" + player.error.message);\n                // restart the player on fragment error;\n                if (error.code === 2) {\n                    player.src = song.media_url + \"?v=\" + (new Date()).getTime();\n                    player.load();\n                    player.play();\n                }\n            }\n\n            player.onwaiting = _ => {\n                // TODO: set buffering state\n            }\n\n            // Play next song on end\n            player.onended = _ => {\n                // TODO: Check for loop enabled or not\n                nextSong();\n            }\n\n            // on time update\n            player.ontimeupdate = event => {\n                setCurrentTime(event.target.currentTime);\n            }\n        }\n        console.info(\"Player updated!\");\n\n        // cleanup\n        return () => {\n            player.pause();\n            player.removeAttribute('src');\n            player.load();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [player]);\n\n    // If song isnt there, or src is not set, return error\n    if (!song || !(player && player.src)) {\n        return <span>Please choose a song!</span>;\n    }\n\n    // Set state to playing\n    const play = () => {\n        setPaused(false);\n        return player.play();\n    };\n\n    // Set state to paused\n    const pause = () => {\n        setPaused(true);\n        return player.pause();\n    }\n\n    const changeVolume = v => {\n        player.volume = v;\n        setVolume(v);\n    }\n\n    const changeCurrentTime = time => {\n        player.currentTime = time;\n        setCurrentTime(time);\n    }\n\n    return (\n        <div\n            onClick={() => {\n                setIsMusicPlayerVisible(false);\n            }}\n            className={\"MusicPlayer animated player p-5 \" + (isMusicPlayerVisible ? \" visible-on-mobile\" : \"\")}>\n\n            <div\n                onClick={event => {\n                    event.stopPropagation();\n                }}\n                className=\"player-card px-8 text-center bg-white p-3 rounded-lg\">\n                {/* song art and detail */}\n                <div className=\"beat-box mx-auto my-3 flex justify-center items-center\" style={{ width: \"150px\", height: \"150px\" }}>\n                    <img src={song.image} alt={song.song} style={{ width: \"150px\", height: \"150px\" }} className={\"rounded-full shadow-lg mx-auto mb-5 \" + (player.paused ? \"\" : \"heart-beat\")} />\n                </div>\n                <div className=\"font-bold text-gray-800\">\n                    {Helper.unescape(song.song)}\n                </div>\n                <div className=\"text-gray-500 text-xs\">\n                    {Helper.unescape(song.singers)}\n                </div>\n                {/* Seeker */}\n                <Slider\n                    value={Helper.completionPercentage(currentTime, duration)}\n                    onChange={(event, value) => {\n                        changeCurrentTime(duration * (value / 100));\n                    }}\n                />\n                {/* Time and stuff */}\n                <div className=\"flex justify-between text-gray-500 text-xxs\">\n                    <span>{Helper.formatSeconds(currentTime)}</span>\n                    <span>{Helper.formatSeconds(duration)}</span>\n                </div>\n            </div>\n            {/* Control Card */}\n            <div\n                onClick={event => {\n                    event.stopPropagation();\n                }}\n                className=\"flex player-card bg-white shadow rounded-lg justify-center mt-5\">\n                {/* Controls */}\n                <div className=\"flex items-center\">\n                    <i className=\"icon icon-to-start cursor-pointer text-gray-600 hover:text-red-500\" title=\"Play Previous\" onClick={() => { prevSong() }}></i>\n                    <div className=\"play-pause-overlay p-2 shadow rounded-full m-5\">\n                        {\n                            player.paused\n                                ? <i className=\"text-xl icon icon-play bg-white cursor-pointer text-gray-800 hover:bg-red-500 hover:text-white flex justify-center items-center rounded-full text-center w-10 h-10 play-button\" title=\"Play\" onClick={() => { play() }}></i>\n                                : <i className=\"text-xl icon icon-pause bg-white cursor-pointer text-gray-800 hover:bg-red-500 hover:text-white flex justify-center items-center rounded-full text-center w-10 h-10 pause-button\" title=\"Pause\" onClick={() => { pause() }}></i>\n                        }\n                    </div>\n                    <i className=\"icon icon-to-end cursor-pointer text-gray-600 hover:text-red-500\" title=\"Play Next\" onClick={() => { nextSong() }}></i>\n                </div>\n                {/* More Details */}\n                <div className=\"flex items-center text-xs text-gray-500\">\n                    {/* Volume slider */}\n                    <Grid item xs style={{ margin: '5px 0 0 1.25rem' }}>\n                        <Slider\n                            value={volume * 100}\n                            color=\"primary\"\n                            onChange={(event, value) => {\n                                changeVolume(value / 100);\n                            }} aria-labelledby=\"continuous-slider\" style={{ width: \"100px\" }} />\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction formatCount(count) {\n    return count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React from 'react';\nimport Helper from '../lib/helper';\n\nexport default function RecentTile({ recent, songIndex, playSong }) {\n    return (\n        <div\n            className=\"pr-5 cursor-pointer\"\n            title={\"Play \" + recent.song}\n            onClick={() => {\n                playSong(\"Recent\", songIndex);\n            }}>\n            <div style={{\n                height: \"150px\",\n                width: \"150px\"\n            }} className=\"mb-3\">\n                <img src={recent.image_500 ? recent.image_500 : recent.image} className=\"shadow rounded-lg\" alt={recent.song} />\n            </div>\n            <div className=\"text-gray-800 text-sm truncate\">\n                <div className=\"font-bold\">\n                    {Helper.unescape(recent.song)}\n                </div>\n                <div className=\"text-gray-500 text-xs\">\n                    Album: {Helper.unescape(recent.album)}\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport Helper from '../lib/helper';\nimport { Favorite, MoreHoriz as MoreHorizIcon } from '@material-ui/icons'\nimport { IconButton } from '@material-ui/core';\n\nexport default function PlaylistItem({\n    song,\n    songIndex,\n    playSong,\n    playingList,\n    selectedPlaylist,\n    playlists,\n    addToPlaylist,\n    removeFromPlaylist\n}) {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <div\n            onMouseLeave={() => {\n                if (isMenuOpen) {\n                    setIsMenuOpen(false);\n                }\n            }}\n            className=\"PlaylistItem px-2 py-2 bg-white playlist-item rounded my-3 flex items-center hover:shadow-lg\">\n            {/* Song Index */}\n            <span className=\"font-bold mx-3 w-4 hidden md:block\">{songIndex + 1}</span>\n            {/* Song Image */}\n            <img src={song.image} className=\"rounded w-12 h-12 border\" alt={song.song} />\n            <i className=\"icon icon-play text-gray-300 mx-1\" style={\n                selectedPlaylist === playingList[0] && songIndex === playingList[1]\n                    ? { color: \"red\" } : {}\n            }></i>\n            {/* Song Name */}\n            <div className=\"flex-grow truncate\">\n                <div title={\"Play \" + song.song}\n                    className=\"font-bold truncate md:w-56 md:flex-grow pr-3 md:flex-shrink-0 cursor-pointer truncate\"\n                    onClick={() => {\n                        playSong(selectedPlaylist, songIndex);\n                    }}>{Helper.unescape(song.song)}</div>\n                {/* Song Singer */}\n                <div className=\"flex\">\n                    <div className=\"text-gray-500 font-semibold pr-2 truncate md:flex-shrink-0\">{Helper.unescape(song.singers)}</div>\n                    {/* Song Duration */}\n                    <div className=\"text-gray-500 font-semibold md:w-24\">{Helper.formatSeconds(song.duration)}</div>\n                    {/* Song Fav Button */}\n                </div>\n            </div>\n            <div className=\"text-gray-500 font-semibold flex-shrink-0 cursor-pointer hidden md:block\">\n                <IconButton className=\"focus:outline-none\" onClick={() => {\n                    addToPlaylist(\"Favorite\", song);\n                }}>\n                    <Favorite htmlColor={song.isFavorite ? \"red\" : \"#ddd\"}\n                        className=\"favorite-maker\" />\n                </IconButton>\n            </div>\n            {/* More Options */}\n            <div className=\"text-gray-500 font-semibold flex-shrink-0 cursor-pointer relative\">\n                <IconButton className=\"focus:outline-none\" onClick={() => {\n                    setIsMenuOpen(!isMenuOpen);\n                }}>\n                    <MoreHorizIcon className=\"favorite-maker\" />\n                </IconButton>\n                {/* Menu */}\n                {\n                    isMenuOpen && (\n                        <div\n                            className=\"item-menu bg-white shadow-lg py-2 rounded\">\n                            {\n                                playlists.map(playlistName => (\n                                    <button\n                                        key={playlistName}\n                                        onClick={() => {\n                                            addToPlaylist(playlistName, song);\n                                        }}\n                                        className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\">Add to {playlistName}</button>\n                                ))\n                            }\n                            <button className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\"\n                                onClick={() => {\n                                    Helper.downloadSong(song);\n                                }}>Download</button>\n                            <button className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\"\n                                onClick={() => {\n                                    removeFromPlaylist(selectedPlaylist, song);\n                                }}>Remove</button>\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport Slider from 'react-slick';\n\nexport default function RecentCarousal({ children }) {\n    var newsTemplate;\n    var settings = {\n        dots: false,\n        infinite: true,\n        slidesToShow: children.length >= 4 ? 4 : children.length,\n        slidesToScroll: 1,\n        responsive: [\n            {\n                breakpoint: 1400,\n                settings: {\n                    slidesToShow: children.length >= 3 ? 3 : children.length,\n                    slidesToScroll: 3,\n                }\n            },\n            {\n                breakpoint: 1200,\n                settings: {\n                    slidesToShow: children.length >= 2 ? 2 : children.length,\n                    slidesToScroll: 2,\n                }\n            },\n            {\n                breakpoint: 720,\n                settings: {\n                    slidesToShow: children.length >= 3 ? 3 : children.length,\n                    slidesToScroll: 3,\n                }\n            },\n            {\n                breakpoint: 640,\n                settings: {\n                    slidesToShow: children.length >= 2 ? 2 : children.length,\n                    slidesToScroll: 2\n                }\n            }\n        ]\n    }\n    return (\n        <div className=\"RecentCarousal\">\n            <Slider {...settings} arrows>\n                {children}\n            </Slider>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport Helper from '../lib/helper';\nimport { MoreHoriz as MoreHorizIcon } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\n\nexport default function SuggestionTile({\n    suggestion,\n    playSong,\n    playlists,\n    selectedPlaylist,\n    addToPlaylist,\n    removeFromPlaylist,\n    setIsFocused\n}) {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <div\n            onMouseLeave={() => {\n                if (isMenuOpen) {\n                    // setIsMenuOpen(false);\n                }\n            }}\n            className=\"p-2 hover:bg-gray-100 animated flex items-center cursor-pointer\"\n        >\n            <div\n                title={\"Play \" + suggestion.song}\n                className=\"flex items-center justify-between flex-grow\"\n                onClick={event => {\n                    playSong(suggestion);\n                    event.stopPropagation();\n                    setIsFocused(false);\n                }}>\n                <img src={suggestion.image} className=\"rounded w-12 h-12 border\" alt={suggestion.song} />\n                <div className=\"flex-grow text-gray-800 text-xs truncate pl-2\">\n                    <div>Song: {Helper.unescape(suggestion.song)}</div>\n                    <div>Album: {Helper.unescape(suggestion.album)}</div>\n                    <div>Singers: {Helper.unescape(suggestion.singers)}</div>\n                </div>\n            </div>\n            {/* More Options */}\n            <div className=\"text-gray-500 font-semibold w-16 cursor-pointer relative\">\n                <IconButton className=\"focus:outline-none\" onClick={() => {\n                    setIsMenuOpen(!isMenuOpen);\n                }}>\n                    <MoreHorizIcon className=\"favorite-maker\" />\n                </IconButton>\n                {/* Menu */}\n                {\n                    isMenuOpen && (\n                        <div\n                            className=\"item-menu bg-white shadow-lg py-2 rounded\">\n                            {\n                                playlists.map(playlistName => (\n                                    <button\n                                        key={playlistName}\n                                        onClick={() => {\n                                            addToPlaylist(playlistName, suggestion);\n                                        }}\n                                        className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\">Add to {playlistName}</button>\n                                ))\n                            }\n                            <button className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\"\n                                onClick={() => {\n                                    Helper.downloadSong(suggestion);\n                                }}>Download</button>\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    );\n}","const baseURL = \"https://pru-saavn.herokuapp.com/api\";\r\nconst socketURL = \"https://pru-saavn.herokuapp.com/socket\";\r\n\r\nconst Endpoints = {\r\n    // search: query => baseURL + \"/search?query=\" + query,\r\n    search: query => socketURL + \"/search?query=\" + query,\r\n    signIn: baseURL + \"/google-signin\",\r\n\r\n    syncUp: baseURL + \"/sync-up\",\r\n    syncDown: baseURL + \"/sync-down\",\r\n}\r\n\r\nexport default Endpoints;\r\n","import React from 'react';\n\nexport default function Loader({ size = \"48px\", color = \"#202020\", className = \"\" }) {\n    return (\n        <div className={className}><span className=\"spinner\" style={{ width: size, height: size, borderRightColor: color }}></span></div>\n    );\n}","import { IconButton } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport debounce from 'lodash/debounce';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport SuggestionTile from './suggestion-tile';\r\nimport Endpoints from '../lib/endpoints';\r\nimport Loader from './loader';\r\n\r\nexport default function SearchBox({\r\n    suggestions,\r\n    setSuggestions,\r\n    addToPlaylist,\r\n    playSong,\r\n    playingList,\r\n    selectedPlaylist,\r\n    playlists,\r\n    removeFromPlaylist,\r\n    // Sidebar related\r\n    isSidebarOpen,\r\n    setIsSidebarOpen,\r\n    isMusicPlayerVisible,\r\n    setIsMusicPlayerVisible,\r\n}) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isFocused, setIsFocused] = useState(false);\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const debounceQuery = useCallback(debounce(value => {\r\n        // Search\r\n        setIsLoading(true);\r\n        Axios.get(Endpoints.search(value))\r\n            .then(response => {\r\n                setSuggestions(response.data);\r\n                setIsLoading(false);\r\n            })\r\n    }, 1000), []);\r\n\r\n    const clearSuggestions = _ => {\r\n        setQuery(\"\");\r\n        setSuggestions([]);\r\n        setIsFocused(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isFocused && suggestions.length > 0) {\r\n            clearSuggestions();\r\n        }\r\n    }, [isFocused, suggestions.length]);\r\n\r\n    const selectSong = song => {\r\n        clearSuggestions();\r\n        const songIndex = addToPlaylist(\"Recent\", song);\r\n        if (Number.isInteger(songIndex)) {\r\n            // take a second and play this\r\n            playSong(\"Recent\", songIndex);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onMouseLeave={() => {\r\n                clearSuggestions();\r\n                setIsFocused(false);\r\n            }}\r\n            onClick={() => {\r\n                setIsFocused(false);\r\n            }}\r\n            className={\r\n                \"SearchBox animated md:px-10 search-box w-full md:w-1/2 flex items-center \"\r\n                + (isFocused ? \"focused \" : \"\")\r\n                + (suggestions.length > 0 ? \"has-suggestions\" : \"\")\r\n            }>\r\n            <input value={query}\r\n                className=\"border px-3 py-2 m:py-3 m:px-5 w-full focus:outline-none flex-grow\"\r\n                style={\r\n                    suggestions.length > 0\r\n                        ? {\r\n                            borderTopLeftRadius: \"0.5em\",\r\n                            borderTopRightRadius: \"0.5em\",\r\n                            borderBottom: \"none\"\r\n                        }\r\n                        : {\r\n                            borderRadius: \"2em\"\r\n                        }\r\n                }\r\n                placeholder=\"Search...\"\r\n                onClick={event => {\r\n                    setIsFocused(true);\r\n                    event.stopPropagation();\r\n                }}\r\n                onChange={event => {\r\n                    const { value } = event.target;\r\n                    setQuery(value);\r\n                    if (value.trim()) {\r\n                        debounceQuery(value);\r\n                    } else {\r\n                        // not show any random suggestion on clearing search field\r\n                        debounceQuery.cancel();\r\n                    }\r\n                }} />\r\n            {/* Clear suggestion button */}\r\n            {\r\n                isLoading\r\n                    ? <Loader size=\"24px\" className=\"loading-suggestion\" />\r\n                    : suggestions.length > 0\r\n                        ? (\r\n                            <IconButton className=\"clear-suggestion focus:outline-none\" title=\"Clear Suggestions\"\r\n                                onClick={event => {\r\n                                    clearSuggestions();\r\n                                    event.stopPropagation();\r\n                                }}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        )\r\n                        : <span></span>\r\n            }\r\n            {/* Suggestion list */}\r\n            {\r\n                suggestions.length > 0 && (\r\n                    <div className=\"suggestion-box rounded-lg px-10 w-full md:w-1/2\">\r\n                        <div className=\"bg-white py-2 shadow-lg border\">\r\n                            {\r\n                                isLoading\r\n                                    ? <Loader size=\"24px\" className=\"mt-2 w-full flex justify-center\" />\r\n                                    : suggestions.map(suggestion => (\r\n                                        <SuggestionTile\r\n                                            suggestion={suggestion}\r\n                                            playSong={selectSong}\r\n                                            key={suggestion.id}\r\n                                            playlists={playlists}\r\n                                            selectedPlaylist={selectedPlaylist}\r\n                                            addToPlaylist={addToPlaylist}\r\n                                            removeFromPlaylist={removeFromPlaylist}\r\n                                            setIsFocused={setIsFocused}\r\n                                        />\r\n                                    ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport { MoreHoriz as MoreHorizIcon } from '@material-ui/icons'\nimport { IconButton } from '@material-ui/core';\n\nexport default function ItemMenu({ buttons = [], small = false, onClick = e => {} }) {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <span\n            onMouseLeave={() => {\n                setIsMenuOpen(false);\n            }}\n            onClick={onClick}\n            className=\"text-gray-500 font-semibold cursor-pointer relative\">\n            <IconButton className=\"focus:outline-none\"\n                size={small ? \"small\" : \"medium\"}\n                onClick={() => {\n                    setIsMenuOpen(!isMenuOpen);\n                }}>\n                <MoreHorizIcon className=\"favorite-maker\" />\n            </IconButton>\n            {/* Menu */}\n            {\n                isMenuOpen && (\n                    <div\n                        className=\"item-menu bg-white shadow-lg py-2 rounded\">\n                        {\n                            buttons.map((b, index) => (\n                                <button\n                                    key={index}\n                                    onClick={() => {\n                                        b.action();\n                                    }}\n                                    className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\">\n                                    {b.label}\n                                </button>\n                            ))\n                        }\n                    </div>\n                )\n            }\n        </span>\n    )\n}\n","import React from 'react';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\n\nexport const ToastContext = React.createContext(null);\n\nexport const withToast = Component => props => (\n    <ToastContext.Consumer>\n        {\n            toast => <Component {...toast} {...props} />\n        }\n    </ToastContext.Consumer>\n)\n\nexport const ToastNotifier = withToast(({ toasts, removeToast }) => {\n\n    return (\n        <div className=\"ToastNotifier\">\n            {\n                toasts.map(toast => {\n                    return (\n                        <div className={\"toast items-center flex pl-4 pr-2 py-1 mt-2 rounded text-white shadow text-xs \" + (toast.type ? toast.type : \"default\")} key={toast.timestamp}>\n                            <div className=\"toast-body flex-grow pr-2\">\n                                <div className=\"toast-title\">{toast.title}</div>\n                                <div className=\"toast-message\">{toast.message}</div>\n                            </div>\n                            <IconButton className=\"focus:outline-none toast-close-button\" title=\"Clear Toast\"\n                                onClick={() => { removeToast(toast) }}>\n                                <CloseIcon fontSize=\"small\" htmlColor=\"white\" />\n                            </IconButton>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    );\n});","export default {\n    googleSignInClientId: \"68653039486-63iqbma47tvrijkuiqbo23gpdc4mbejl.apps.googleusercontent.com\"\n}","import React, { useState } from 'react';\nimport Helper from '../lib/helper';\nimport config from '../lib/config';\nimport GoogleLogin from 'react-google-login';\n\nexport default function SignInAndSync({\n    onSignIn,\n    onSignInError,\n    user,\n    syncToServer,\n    syncFromServer\n}) {\n\n    return (\n        <span className=\"px-4 pt-6\">\n            {\n                user\n                    ? (\n                        <div className=\"relative\">\n                            <div\n                                className=\"px-2 mx-2 py-1 cursor-pointer\">\n                                {/* User Data */}\n                                <div className=\"flex flex-col items-center\">\n                                    <img src={user.picture}\n                                        className=\"rounded-full w-32 h-32 shadow-lg\" alt={user.name} />\n                                    <div className=\"font-bold text-gray-800 text-xl mt-5 text-center\">\n                                        {user.name}\n                                    </div>\n                                    <div className=\"text-gray-500 text-center\">{user.email}</div>\n                                </div>\n                            </div>\n                            {/* Sync Options */}\n                            <div\n                                className=\"bg-white rounded text-gray-800 py-2 px-4\">\n                                <div className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer rounded mb-2\"\n                                    title=\"Sync playlist to server\"\n                                    onClick={() => {\n                                        syncToServer();\n                                    }}>Sync to server</div>\n                                <div className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer rounded mb-2\"\n                                    title=\"Sync playlist to server\"\n                                    onClick={() => {\n                                        syncFromServer();\n                                    }}>Sync from server</div>\n                            </div>\n                        </div>\n                    )\n                    : (\n                        <div className=\"px-2 mx-2\">\n                            {/* Login Options */}\n                            <div className=\"flex flex-col items-center\">\n                                <img src={\"https://avatars2.githubusercontent.com/u/20546147?s=460&v=4\"}\n                                    className=\"rounded-full w-32 h-32 shadow-lg\" alt={\"Saavn Pru\"} />\n                                <div className=\"font-bold text-gray-800 text-xl mt-5 text-center\">\n                                    {\"Saavn Pru\"}\n                                </div>\n                                <div className=\"text-gray-500 text-center mb-3\">{\"thefallenmerc@gmail.com\"}</div>\n                                <GoogleLogin\n                                    clientId={config.googleSignInClientId}\n                                    buttonText=\"Login\"\n                                    onSuccess={onSignIn}\n                                    render={renderProps => (\n                                        <button\n                                            className={\n                                                \"px-2 mx-2 rounded py-1 cursor-pointer shadow \"\n                                                + (renderProps.disabled ? \"bg-gray-200 text-gray-500\" : \"bg-blue-500 text-white\")\n                                            }\n                                            onClick={renderProps.onClick}\n                                            disabled={renderProps.disabled}>Login</button>\n                                    )}\n                                    onFailure={onSignInError}\n                                    isSignedIn={true}\n                                    cookiePolicy={'single_host_origin'}\n                                />\n                            </div>\n                        </div>\n                    )\n            }\n        </span>\n    )\n}\n","import React, { useState } from 'react'\r\nimport { Add as AddIcon } from '@material-ui/icons';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ItemMenu from './item-menu';\r\nimport { withToast } from '../contexts/toast-context';\r\nimport SignInAndSync from './signin-and-sync';\r\n\r\nfunction SidebarComponent({\r\n    // Singin and Sync Related\r\n    onSignIn,\r\n    onSignInError,\r\n    user,\r\n    syncToServer,\r\n    syncFromServer,\r\n    // Playlist Related\r\n    playlists,\r\n    addPlaylist,\r\n    removePlaylist,\r\n    selectPlaylist,\r\n    selectedPlaylist,\r\n    addToast,\r\n    isSidebarOpen,\r\n    closeSidebar\r\n}) {\r\n\r\n    const [newPlaylistName, setNewPlaylistName] = useState(\"\");\r\n    // somhow selectPlaylist doesnt directly work in further subcomponents\r\n    const safeSelectPlaylist = playlistName => {\r\n        selectPlaylist(playlistName);\r\n    }\r\n\r\n    const safeRemovePlaylist = playlistName => {\r\n        removePlaylist(playlistName);\r\n    }\r\n\r\n    return (\r\n        <div className={\r\n            \"Sidebar sidebar animated bg-white pt-2 pb-10 \"\r\n            + (isSidebarOpen ? \"\" : \"closed\")\r\n        }>\r\n            {/* Sigin And Sync */}\r\n            <SignInAndSync\r\n                onSignIn={onSignIn}\r\n                onSignInError={onSignInError}\r\n                syncToServer={syncToServer}\r\n                syncFromServer={syncFromServer}\r\n                user={user} />\r\n            {/* Playlists */}\r\n            <div className=\"px-4\">\r\n                <div className=\"px-4 mb-5 uppercase font-bold text-gray-500\">My Music</div>\r\n                {\r\n                    Object.keys(playlists).map(playlistName => (\r\n                        <div\r\n                            className={\r\n                                \"px-4 text-gray-800 flex justify-between items-center font-bold py-2 hover:bg-gray-300 my-1 rounded-lg cursor-pointer \" + (playlistName === selectedPlaylist ? \"bg-gray-300\" : \"\")\r\n                            }\r\n                            onClick={() => {\r\n                                selectPlaylist(playlistName);\r\n                                closeSidebar();\r\n                            }}\r\n                            key={playlistName}>\r\n                            <span>{playlistName}</span>\r\n                            <ItemMenu onClick={e => e.stopPropagation()} small buttons={[\r\n                                {\r\n                                    action: () => {\r\n                                        safeSelectPlaylist(\"Recent\");\r\n                                        removePlaylist(playlistName);\r\n                                    },\r\n                                    label: \"Remove\"\r\n                                }\r\n                            ]} />\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"relative\">\r\n                    <input\r\n                        className=\"px-4 text-gray-800 font-bold py-2 my-2 bg-gray-100 rounded-lg focus:outline-none\"\r\n                        placeholder=\"Add playlist...\" value={newPlaylistName}\r\n                        onKeyDown={event => {\r\n                            if (event.key === \"Enter\" && event.target.value.length > 0) {\r\n                                addPlaylist(newPlaylistName);\r\n                                setNewPlaylistName(\"\");\r\n                            }\r\n                        }}\r\n                        onChange={event => {\r\n                            setNewPlaylistName(event.target.value);\r\n                        }} />\r\n                    {\r\n                        newPlaylistName && (\r\n                            <IconButton size=\"small\"\r\n                                className=\"focus:outline-none\"\r\n                                onClick={\r\n                                    () => {\r\n                                        addPlaylist(newPlaylistName);\r\n                                        setNewPlaylistName(\"\");\r\n                                    }\r\n                                }\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    right: \"15px\",\r\n                                    top: \"13px\",\r\n                                }}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Sidebar = withToast(SidebarComponent);\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MusicPlayer from './components/media-player';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { MusicNote, Menu as MenuIcon } from '@material-ui/icons';\r\nimport RecentTile from './components/recent-tile';\r\nimport PlaylistItem from './components/playlist-item';\r\nimport RecentCarousal from './components/recent-carousel';\r\nimport SearchBox from './components/search-box';\r\nimport Sidebar from './components/sidebar';\r\nimport Axios from 'axios';\r\nimport Endpoints from './lib/endpoints';\r\nimport { ToastContext, ToastNotifier } from './contexts/toast-context';\r\n\r\nfunction App() {\r\n\r\n  // The logged in user\r\n  const [user, setUser] = useState(null);\r\n  // currently playing list and its index\r\n  const [playingList, setPlayingList] = useState([\"Recent\", 0]);\r\n  // current shown playlist in app\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState(\"Recent\");\r\n  // list of suggestions in search\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  // the whole list of all the playlists available\r\n  const [playlists, setPlaylists] = useState({\r\n    \"Recent\": [],\r\n    \"Favorite\": []\r\n  });\r\n  // toaster\r\n  const [toasts, setToasts] = useState([]);\r\n  let listeners = [];\r\n  // sidebar\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  // music player\r\n  const [isMusicPlayerVisible, setIsMusicPlayerVisible] = useState(false);\r\n\r\n  // Add new playlist to list\r\n  const addPlaylist = (playlistName, playlistContent = []) => {\r\n    const newPlaylists = { ...playlists, [playlistName]: playlistContent };\r\n    updatePlaylists(newPlaylists);\r\n    addToast(\"Added playlist \\\"\" + playlistName + \"\\\"\");\r\n  }\r\n\r\n  // Update an existing playing with new song list\r\n  const updatePlaylist = (playlistName, playlistContent = []) => {\r\n    console.log('updating', { ...playlists, [playlistName]: playlistContent })\r\n    updatePlaylists({ ...playlists, [playlistName]: playlistContent });\r\n    addToast(\"Updated \" + playlistName);\r\n  }\r\n\r\n  // save playlists object to state and localstorage\r\n  const updatePlaylists = newPlaylists => {\r\n    localStorage.setItem('playlists', JSON.stringify(newPlaylists));\r\n    setPlaylists(newPlaylists);\r\n  }\r\n\r\n  // Add song to playlist\r\n  const addToPlaylist = (playlistName, song) => {\r\n    if ((playlistName in playlists)) {\r\n      const oldPlaylist = playlists[playlistName];\r\n      const indexOfSongInOldList = playlists[playlistName].findIndex(s => s.id === song.id);\r\n      if (indexOfSongInOldList < 0) {\r\n        updatePlaylist(playlistName, [...oldPlaylist, song])\r\n        // index at which song is added\r\n        if (playlistName !== \"Recent\") {\r\n          addToast(\"Added \" + song.song + \" to \" + playlistName);\r\n        }\r\n        return oldPlaylist.length;\r\n      } else {\r\n        return indexOfSongInOldList;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove song from a playlist (if needed)\r\n  const removeFromPlaylist = (playlistName, song) => {\r\n    if ((playlistName in playlists)) {\r\n      const index = playlists[playlistName].findIndex(s => s.id === song.id);\r\n      if (index > -1) {\r\n        const newPlaylist = playlists[playlistName];\r\n        newPlaylist.splice(index, 1);\r\n        updatePlaylist(playlistName, newPlaylist);\r\n        addToast(\"Removed \" + song.song + \" from \" + playlistName);\r\n      }\r\n    }\r\n  }\r\n\r\n  // remove a playlist from list\r\n  const removePlaylist = playlistName => {\r\n    // check if it exists\r\n    if (playlistName in playlists) {\r\n      // cannot delete recent and favorite\r\n      if (![\"Recent\", \"Favorite\"].includes(playlistName)) {\r\n        const oldPlaylist = { ...playlists };\r\n        delete oldPlaylist[playlistName];\r\n        console.log('updating', oldPlaylist)\r\n        // if this is selected playlist, set another as selected (recent)\r\n        updatePlaylists(oldPlaylist);\r\n        if (selectedPlaylist === playlistName) {\r\n          setSelectedPlaylist(\"Recent\");\r\n        }\r\n        addToast(\"Removed playlist \\\"\" + playlistName + \"\\\"!\");\r\n      }\r\n    }\r\n  }\r\n\r\n  // Play a given song\r\n  const playSong = (playlistName, songIndex) => {\r\n    console.log(\"playing\", playlistName, songIndex);\r\n    setPlayingList([playlistName, songIndex]);\r\n\r\n    try {\r\n      const song = playlists[playlistName][songIndex];\r\n      if (song) {\r\n        // add to recent if not there\r\n        if (playlists[\"Recent\"].findIndex(r => r.id === song.id) === -1) {\r\n          addToPlaylist(\"Recent\", song);\r\n        }\r\n      }\r\n    } catch (e) { console.log(\"adding to recent failed at playSong\") }\r\n  }\r\n\r\n  // Clear recent songs\r\n  const clearRecents = () => {\r\n    if (playlists[\"Recent\"].length > 0) {\r\n      updatePlaylist(\"Recent\", []);\r\n      addToast(\"Cleared \\\"Recent\\\"\");\r\n    }\r\n  }\r\n\r\n  // Play next song\r\n  const nextSong = () => {\r\n    const [playListName, songIndex] = playingList;\r\n    // check if current index is the last index\r\n    if (songIndex === playlists[playListName].length - 1) {\r\n      // play the first song\r\n      setPlayingList([playListName, 0]);\r\n    } else {\r\n      setPlayingList([playListName, songIndex + 1]);\r\n    }\r\n    addToast(\"Playing next song\");\r\n  };\r\n\r\n  // Play prev song\r\n  const prevSong = () => {\r\n    const [playListName, songIndex] = playingList;\r\n    // check if current index is the first index\r\n    if (songIndex === 0) {\r\n      // play the first song\r\n      setPlayingList([playListName, playlists[playListName].length - 1]);\r\n    } else {\r\n      setPlayingList([playListName, songIndex - 1]);\r\n    }\r\n    addToast(\"Playing previous song\");\r\n  };\r\n\r\n  // google signin\r\n  const onSignIn = googleUser => {\r\n    Axios.get(Endpoints.signIn, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + googleUser.tokenId\r\n      }\r\n    })\r\n      .then(response => {\r\n        const { user } = response.data;\r\n        setUser(user);\r\n        // save the user to localstorage\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        addToast(\"Signed in as \" + user.name, \"\", \"success\");\r\n      })\r\n      .catch(error => {\r\n        addToast(\"Couldn't auto signin!\", \"\", \"danger\");\r\n        console.log({ error });\r\n      })\r\n  }\r\n\r\n  // google signin\r\n  const onSignInError = error => {\r\n    console.error(error);\r\n    addToast(\"Could not sign you in!\");\r\n  }\r\n\r\n  // sync state to server\r\n  const syncToServer = () => {\r\n    addToast(\"Sync to server initiated\");\r\n    Axios.post(Endpoints.syncUp, {\r\n      playlists\r\n    }, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + user.token\r\n      }\r\n    })\r\n      .then(response => {\r\n        addToast(\"Synced to server\", \"\", \"success\");\r\n      }).catch(error => {\r\n        addToast(\"Couldn't sync to server!\");\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n  const syncFromServer = () => {\r\n    addToast(\"Sync from server initiated\");\r\n    Axios.get(Endpoints.syncDown, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + user.token\r\n      }\r\n    })\r\n      .then(response => {\r\n        const { data } = response;\r\n        updatePlaylists(data.playlists);\r\n        addToast(\"Synced from server\", \"\", \"success\");\r\n      })\r\n      .catch(error => {\r\n        addToast(\"Couldn't sync from server!\");\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const addToast = (title = '', message = '', type = 'default') => {\r\n    const toast = { title, message, type, timestamp: (new Date()).getTime() + Math.random() };\r\n    setToasts([...toasts, toast]);\r\n    listeners.push(setTimeout(() => {\r\n      removeToast(toast);\r\n    }, 3000));\r\n  }\r\n\r\n  const removeToast = toast => {\r\n    const newToast = [...toasts];\r\n    newToast.splice(newToast.find(t => t.timestamp === toast.timestamp), 1);\r\n    setToasts(newToast);\r\n  }\r\n\r\n  const closeSidebar = _ => {\r\n    setIsSidebarOpen(false);\r\n  }\r\n\r\n  // load playlists\r\n  useEffect(() => {\r\n    const playlistFromLocal = localStorage.getItem('playlists');\r\n    let recentPlaylist = [];\r\n    let favoritePlaylist = [];\r\n    const playlistsToUpdate = {};\r\n\r\n    try {\r\n      const parsedPlaylists = JSON.parse(playlistFromLocal);\r\n      // check if parsed Playlist exists\r\n      if (parsedPlaylists && typeof parsedPlaylists === 'object') {\r\n        if ('Recent' in parsedPlaylists) {\r\n          recentPlaylist = parsedPlaylists.Recent;\r\n          delete parsedPlaylists.Recent;\r\n        }\r\n        if (\"Favorite\" in parsedPlaylists) {\r\n          favoritePlaylist = parsedPlaylists.Favorite;\r\n          delete parsedPlaylists.Favorite;\r\n        }\r\n        for (const playlistName in parsedPlaylists) {\r\n          playlistsToUpdate[playlistName] = parsedPlaylists[playlistName];\r\n        }\r\n      }\r\n    } catch (err) {\r\n    }\r\n\r\n    playlistsToUpdate.Recent = recentPlaylist;\r\n    playlistsToUpdate.Favorite = favoritePlaylist;\r\n    // update playlists\r\n    localStorage.setItem('playlists', JSON.stringify(playlistsToUpdate));\r\n    setPlaylists(playlistsToUpdate);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // toaster cleanup\r\n    return () => {\r\n      listeners.forEach(l => {\r\n        clearTimeout(l);\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  useEffect(function() {\r\n    // check if currentplaylist empty\r\n    if (selectedPlaylist === \"Recent\" && playlists[selectedPlaylist] && playlists[selectedPlaylist].length === 0) {\r\n      addToast(\"It looks lonely here\", \"Maybe, Try searching a song.\");\r\n    }\r\n  }, [selectedPlaylist]);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{\r\n      toasts,\r\n      addToast,\r\n      removeToast\r\n    }}>\r\n      <div className=\"App bg-gray-100\">\r\n        {/* sidebar */}\r\n        <Sidebar\r\n          // Signin and Sync related\r\n          onSignIn={onSignIn}\r\n          onSignInError={onSignInError}\r\n          syncToServer={syncToServer}\r\n          syncFromServer={syncFromServer}\r\n          user={user}\r\n          // Playlist related\r\n          playlists={playlists}\r\n          addPlaylist={addPlaylist}\r\n          selectedPlaylist={selectedPlaylist}\r\n          removePlaylist={removePlaylist}\r\n          selectPlaylist={playlistName => {\r\n            setSelectedPlaylist(playlistName);\r\n          }}\r\n          isSidebarOpen={isSidebarOpen}\r\n          closeSidebar={closeSidebar}\r\n        />\r\n        {/* main area */}\r\n        <div className={\"main animated \" + (isSidebarOpen ? \"\" : \"sidebar-closed\")}>\r\n          <div className=\"top-bar animated flex box-border justify-start items-center p-2 md:pt-6\">\r\n            <div className=\"mr-2\">\r\n              {\r\n                isSidebarOpen\r\n                  ? (\r\n                    <IconButton\r\n                      className=\"focus:outline-none\"\r\n                      onClick={() => { setIsSidebarOpen(!isSidebarOpen) }}>\r\n                      <CloseIcon />\r\n                    </IconButton>\r\n                  )\r\n                  : (\r\n                    <IconButton\r\n                      className=\"focus:outline-none\"\r\n                      onClick={() => { setIsSidebarOpen(!isSidebarOpen) }}>\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                  )\r\n              }\r\n            </div>\r\n            {/* Search field */}\r\n            <SearchBox\r\n              suggestions={suggestions}\r\n              setSuggestions={setSuggestions}\r\n              addToPlaylist={addToPlaylist}\r\n              playSong={playSong}\r\n              playingList={playingList}\r\n              selectedPlaylist={selectedPlaylist}\r\n              playlists={Object.keys(playlists)}\r\n              removeFromPlaylist={removeFromPlaylist}\r\n              isSidebarOpen={isSidebarOpen}\r\n              setIsSidebarOpen={setIsSidebarOpen}\r\n              isMusicPlayerVisible={isMusicPlayerVisible}\r\n              setIsMusicPlayerVisible={setIsMusicPlayerVisible}\r\n            />\r\n            {/* Music icon */}\r\n            <div className=\"ml-2 md:hidden\">\r\n              <IconButton\r\n                className=\"focus:outline-none\"\r\n                onClick={() => {\r\n                  setIsMusicPlayerVisible(!isMusicPlayerVisible)\r\n                }}>\r\n                <MusicNote />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          {/* Main Content */}\r\n          <div className=\"px-2 md:pl-10 md:pr-0 pt-3 md:flex pb-48\">\r\n            <div className=\"md:w-3/5 w-full\">\r\n              {/* recent */}\r\n              {\r\n                playlists[\"Recent\"].length > 0 && (\r\n                  <div>\r\n                    <div className=\"flex items-center\">\r\n                      <span className=\"text-xl font-bold text-gray-800 mr-3\">Recent Played</span>\r\n                      <IconButton typeof=\"danger\" className=\"focus:outline-none\" onClick={() => {\r\n                        clearRecents();\r\n                      }}><CloseIcon fontSize=\"small\" /></IconButton>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                      <RecentCarousal>\r\n                        {\r\n                          playlists[\"Recent\"].map((recent, index) => <RecentTile recent={recent} songIndex={index} playSong={playSong} key={recent.id} />)\r\n                        }\r\n                      </RecentCarousal>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n              <div className=\"py-5\">\r\n                {/* Song List */}\r\n                <h1 className=\"text-xl font-bold text-gray-800\">\r\n                  {selectedPlaylist ? selectedPlaylist : \"No playlist selected\"}\r\n                </h1>\r\n                <span className=\"font-bold text-gray-500 text-xs\">\r\n                  {selectedPlaylist && playlists[selectedPlaylist] ? playlists[selectedPlaylist].length : \"0\"} Song(s)\r\n              </span>\r\n                <div className=\"py-2\">\r\n                  {\r\n                    selectedPlaylist && playlists[selectedPlaylist]\r\n                    && playlists[selectedPlaylist].map((song, index) => (\r\n                      <PlaylistItem\r\n                        song={song}\r\n                        songIndex={index}\r\n                        playSong={playSong}\r\n                        key={song.id}\r\n                        playingList={playingList}\r\n                        selectedPlaylist={selectedPlaylist}\r\n                        playlists={Object.keys(playlists)}\r\n                        addToPlaylist={addToPlaylist}\r\n                        removeFromPlaylist={removeFromPlaylist}\r\n                      />\r\n                    ))\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"md:w-2/5 w-full px-5\">\r\n              <h1 className=\"text-xl md:block hidden font-bold text-gray-800\">Now Playing &gt; {playingList[0]}</h1>\r\n              <span className=\"font-bold md:block hidden text-gray-500 text-xs\">{playlists[playingList[0]].length} Song(s) on the list</span>\r\n              <div className=\"py-2\">\r\n                <MusicPlayer\r\n                  song={playlists[playingList[0]][playingList[1]]}\r\n                  nextSong={nextSong}\r\n                  prevSong={prevSong}\r\n                  isMusicPlayerVisible={isMusicPlayerVisible}\r\n                  setIsMusicPlayerVisible={setIsMusicPlayerVisible}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastNotifier />\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}