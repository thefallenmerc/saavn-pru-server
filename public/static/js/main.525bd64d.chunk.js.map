{"version":3,"sources":["lib/helper.js","components/media-player.js","components/recent-tile.js","components/playlist-item.js","components/recent-carousel.js","components/suggestion-tile.js","lib/endpoints.js","components/loader.js","components/search-box.js","components/item-menu.js","contexts/toast-context.js","components/sidebar.js","lib/config.js","components/signin-and-sync.js","App.js","serviceWorker.js","index.js"],"names":["Helper","unescape","data","span","document","createElement","innerHTML","innerText","formatSeconds","timeInSeconds","minutes","parseInt","toString","seconds","length","repeat","completionPercentage","currentTime","duration","downloadJson","filename","json","element","setAttribute","encodeURIComponent","JSON","stringify","style","display","body","appendChild","click","removeChild","downloadSong","song","media_url","defaultSong","singers","play_count","label","image","MusicPlayer","nextSong","prevSong","useState","setPaused","volume","setVolume","setDuration","setCurrentTime","Audio","player","setPlayer","useEffect","audioPlayer","onloadedmetadata","event","play","onerror","error","console","log","code","message","src","Date","getTime","load","onwaiting","_","onended","ontimeupdate","target","info","pause","removeAttribute","className","width","height","alt","paused","Slider","value","onChange","time","title","onClick","Grid","item","xs","margin","color","v","aria-labelledby","RecentTile","recent","songIndex","playSong","image_500","album","PlaylistItem","playingList","selectedPlaylist","playlists","addToPlaylist","removeFromPlaylist","isMenuOpen","setIsMenuOpen","onMouseLeave","IconButton","Favorite","htmlColor","isFavorite","MoreHoriz","map","playlistName","key","RecentCarousal","children","settings","dots","infinite","slidesToShow","slidesToScroll","arrows","SuggestionTile","suggestion","baseURL","Endpoints","search","query","signIn","syncUp","syncDown","Loader","size","borderRightColor","SearchBox","suggestions","setSuggestions","isLoading","setIsLoading","setQuery","debounceQuery","useCallback","debounce","Axios","get","then","response","clearSuggestions","selectSong","Number","isInteger","borderTopLeftRadius","borderTopRightRadius","borderBottom","borderRadius","placeholder","trim","cancel","fontSize","id","ItemMenu","buttons","small","e","b","index","action","ToastContext","React","createContext","withToast","Component","props","Consumer","toast","ToastNotifier","toasts","removeToast","getStyle","type","timestamp","Sidebar","addPlaylist","removePlaylist","selectPlaylist","addToast","newPlaylistName","setNewPlaylistName","Object","keys","stopPropagation","safeSelectPlaylist","onKeyDown","position","right","top","Add","SignInAndSync","onSignIn","onSignInError","user","syncToServer","syncFromServer","isMenuVisible","setIsMenuVisible","onMouseEnter","name","zIndex","email","clientId","config","buttonText","onSuccess","render","renderProps","disabled","onFailure","isSignedIn","cookiePolicy","App","setUser","setPlayingList","setSelectedPlaylist","setPlaylists","setToasts","listeners","updatePlaylist","playlistContent","updatePlaylists","newPlaylists","localStorage","setItem","oldPlaylist","indexOfSongInOldList","findIndex","s","newPlaylist","splice","r","push","setTimeout","newToast","find","t","playlistFromLocal","getItem","recentPlaylist","favoritePlaylist","playlistsToUpdate","parsedPlaylists","parse","Recent","err","forEach","l","clearTimeout","Provider","includes","googleUser","headers","Authorization","tokenId","catch","post","token","typeof","playListName","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.525bd64d.chunk.js","sourcesContent":["const Helper = {\n    unescape: data => {\n        const span = document.createElement('span');\n        span.innerHTML = data;\n        return span.innerText;\n    },\n    formatSeconds: (timeInSeconds = 0) => {\n        let minutes = parseInt(timeInSeconds / 60).toString();\n        let seconds = parseInt(timeInSeconds % 60).toString();\n\n        if (minutes.length < 2) {\n            minutes = \"0\".repeat(2 - minutes.length) + minutes;\n        }\n\n        if (seconds.length < 2) {\n            seconds = \"0\".repeat(2 - seconds.length) + seconds;\n        }\n\n        return minutes + \":\" + seconds;\n    },\n    completionPercentage: (currentTime, duration) => (currentTime / duration) * 100,\n    downloadJson: (filename, json) => {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json, null, 4)));\n        element.setAttribute('download', filename);\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n    },\n    downloadSong: (song) => {\n        var element = document.createElement('a');\n        element.setAttribute('href', song.media_url);\n        element.setAttribute('target', \"_blank\");\n        element.setAttribute('download', song.song + \".mp4\");\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n    },\n}\nexport default Helper;","import React, { useEffect, useState } from 'react'\nimport Helper from '../lib/helper';\nimport { Grid, Slider } from '@material-ui/core';\n\n\n\nconst defaultSong = {\n    song: \"Some Song\",\n    singers: \"Some Singer\",\n    play_count: 9999999,\n    media_url: \"\",\n    label: \"Some Label\",\n    image: \"https://images.unsplash.com/photo-1573247353133-0290e4606fbf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n}\n\nexport default function MusicPlayer({ song, nextSong, prevSong }) {\n\n    if(!song) {\n        song = defaultSong;\n    }\n\n    // player internal states\n    // eslint-disable-next-line no-unused-vars\n    const [paused, setPaused] = useState(true);\n    const [volume, setVolume] = useState(0.3);\n    const [duration, setDuration] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n\n    const [player, setPlayer] = useState(new Audio());\n\n    // Load the song and initialize the player\n    useEffect(() => {\n        if (song) {\n            const audioPlayer = new Audio(song.media_url);\n            audioPlayer.volume = volume;\n            setPlayer(audioPlayer);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [song]);\n\n    useEffect(() => {\n        if (player) {\n            // after loading metadata\n            player.onloadedmetadata = event => {\n                setDuration(player.duration);\n                setCurrentTime(player.currentTime);\n                play();\n            };\n\n            // Handle error\n            player.onerror = error => {\n                error = player.error;\n                console.log(\"Error \" + player.error.code + \"; details: \" + player.error.message);\n                // restart the player on fragment error;\n                if (error.code === 2) {\n                    player.src = song.media_url + \"?v=\" + (new Date()).getTime();\n                    player.load();\n                    player.play();\n                }\n            }\n\n            player.onwaiting = _ => {\n                // TODO: set buffering state\n            }\n\n            // Play next song on end\n            player.onended = _ => {\n                // TODO: Check for loop enabled or not\n                nextSong();\n            }\n\n            // on time update\n            player.ontimeupdate = event => {\n                setCurrentTime(event.target.currentTime);\n            }\n        }\n        console.info(\"Player updated!\");\n\n        // cleanup\n        return () => {\n            player.pause();\n            player.removeAttribute('src');\n            player.load();\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [player]);\n\n    // If song isnt there, or src is not set, return error\n    if (!song || !(player && player.src)) {\n        return <span>Please choose a song!</span>;\n    }\n\n    // Set state to playing\n    const play = () => {\n        setPaused(false);\n        return player.play();\n    };\n\n    // Set state to paused\n    const pause = () => {\n        setPaused(true);\n        return player.pause();\n    }\n\n    const changeVolume = v => {\n        player.volume = v;\n        setVolume(v);\n    }\n\n    const changeCurrentTime = time => {\n        player.currentTime = time;\n        setCurrentTime(time);\n    }\n\n    return (\n        <div className=\"player p-5\">\n\n            <div className=\"player-card px-8 text-center bg-white p-3 rounded-lg\">\n                {/* song art and detail */}\n                <div className=\"beat-box mx-auto my-3 flex justify-center items-center\" style={{ width: \"150px\", height: \"150px\" }}>\n                    <img src={song.image} alt={song.song} style={{ width: \"150px\", height: \"150px\" }} className={\"rounded-full shadow-lg mx-auto mb-5 \" + (player.paused ? \"\" : \"heart-beat\")} />\n                </div>\n                <div className=\"font-bold text-gray-800\">\n                    {Helper.unescape(song.song)}\n                </div>\n                <div className=\"text-gray-500 text-xs\">\n                    {Helper.unescape(song.singers)}\n                </div>\n                {/* Seeker */}\n                <Slider\n                    value={Helper.completionPercentage(currentTime, duration)}\n                    onChange={(event, value) => {\n                        changeCurrentTime(duration * (value / 100));\n                    }}\n                />\n                {/* Time and stuff */}\n                <div className=\"flex justify-between text-gray-500 text-xxs\">\n                    <span>{Helper.formatSeconds(currentTime)}</span>\n                    <span>{Helper.formatSeconds(duration)}</span>\n                </div>\n            </div>\n            {/* Control Card */}\n            <div className=\"flex player-card bg-white shadow rounded-lg justify-center mt-5\">\n                {/* Controls */}\n                <div className=\"flex items-center\">\n                    <i className=\"icon icon-to-start cursor-pointer text-gray-600 hover:text-red-500\" title=\"Play Previous\" onClick={() => { prevSong() }}></i>\n                    <div className=\"play-pause-overlay p-2 shadow rounded-full m-5\">\n                        {\n                            player.paused\n                                ? <i className=\"text-xl icon icon-play bg-white cursor-pointer text-gray-800 hover:bg-red-500 hover:text-white flex justify-center items-center rounded-full text-center w-10 h-10 play-button\" title=\"Play\" onClick={() => { play() }}></i>\n                                : <i className=\"text-xl icon icon-pause bg-white cursor-pointer text-gray-800 hover:bg-red-500 hover:text-white flex justify-center items-center rounded-full text-center w-10 h-10 pause-button\" title=\"Pause\" onClick={() => { pause() }}></i>\n                        }\n                    </div>\n                    <i className=\"icon icon-to-end cursor-pointer text-gray-600 hover:text-red-500\" title=\"Play Next\" onClick={() => { nextSong() }}></i>\n                </div>\n                {/* More Details */}\n                <div className=\"flex items-center text-xs text-gray-500\">\n                    {/* Volume slider */}\n                    <Grid item xs style={{ margin: '5px 0 0 1.25rem' }}>\n                        <Slider\n                            value={volume * 100}\n                            color=\"primary\"\n                            onChange={(event, value) => {\n                                changeVolume(value / 100);\n                            }} aria-labelledby=\"continuous-slider\" style={{ width: \"100px\" }} />\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction formatCount(count) {\n    return count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React from 'react';\nimport Helper from '../lib/helper';\n\nexport default function RecentTile({ recent, songIndex, playSong }) {\n    return (\n        <div\n            className=\"pr-5 cursor-pointer\"\n            title={\"Play \" + recent.song}\n            onClick={() => {\n                playSong(\"Recent\", songIndex);\n            }}>\n            <div style={{\n                height: \"150px\",\n                width: \"150px\"\n            }} className=\"mb-3\">\n                <img src={recent.image_500 ? recent.image_500 : recent.image} className=\"shadow rounded-lg\" alt={recent.song} />\n            </div>\n            <div className=\"text-gray-800 text-sm truncate\">\n                <div className=\"font-bold\">\n                    {Helper.unescape(recent.song)}\n                </div>\n                <div className=\"text-gray-500 text-xs\">\n                    Album: {Helper.unescape(recent.album)}\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport Helper from '../lib/helper';\nimport { Favorite, MoreHoriz as MoreHorizIcon } from '@material-ui/icons'\nimport { IconButton } from '@material-ui/core';\n\nexport default function PlaylistItem({\n    song,\n    songIndex,\n    playSong,\n    playingList,\n    selectedPlaylist,\n    playlists,\n    addToPlaylist,\n    removeFromPlaylist\n}) {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <div\n            onMouseLeave={() => {\n                if (isMenuOpen) {\n                    setIsMenuOpen(false);\n                }\n            }}\n            className=\"px-2 py-2 bg-white playlist-item rounded my-3 flex items-center hover:shadow-lg\">\n            <span className=\"font-bold mx-3 w-4\">{songIndex + 1}</span>\n            <img src={song.image} className=\"rounded w-12 h-12 border\" alt={song.song} />\n            <i className=\"icon icon-play text-gray-300 mx-1\" style={\n                selectedPlaylist === playingList[0] && songIndex === playingList[1]\n                ? { color: \"red\" } : {}\n            }></i>\n            <div title={\"Play \" + song.song}\n                className=\"font-bold truncate w-56 flex-grow pr-3 flex-shrink-0 cursor-pointer\"\n                onClick={() => {\n                    playSong(selectedPlaylist, songIndex);\n                }}>{song.song}</div>\n            <div className=\"text-gray-500 font-semibold w-48 truncate flex-shrink-0\">{song.singers}</div>\n            <div className=\"text-gray-500 font-semibold w-24\">{Helper.formatSeconds(song.duration)}</div>\n            <div className=\"text-gray-500 font-semibold w-16 cursor-pointer\">\n                <IconButton className=\"focus:outline-none\" onClick={() => {\n                    addToPlaylist(\"Favorite\", song);\n                }}>\n                    <Favorite htmlColor={song.isFavorite ? \"red\" : \"#ddd\"}\n                        className=\"favorite-maker\" />\n                </IconButton>\n            </div>\n            {/* More Options */}\n            <div className=\"text-gray-500 font-semibold w-16 cursor-pointer relative\">\n                <IconButton className=\"focus:outline-none\" onClick={() => {\n                    setIsMenuOpen(!isMenuOpen);\n                }}>\n                    <MoreHorizIcon className=\"favorite-maker\" />\n                </IconButton>\n                {/* Menu */}\n                {\n                    isMenuOpen && (\n                        <div\n                            className=\"item-menu bg-white shadow-lg py-2 rounded\">\n                            {\n                                playlists.map(playlistName => (\n                                    <button\n                                        key={playlistName}\n                                        onClick={() => {\n                                            addToPlaylist(playlistName, song);\n                                        }}\n                                        className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\">Add to {playlistName}</button>\n                                ))\n                            }\n                            <button className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\"\n                                onClick={() => {\n                                    Helper.downloadSong(song);\n                                }}>Download</button>\n                            <button className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\"\n                                onClick={() => {\n                                    removeFromPlaylist(selectedPlaylist, song);\n                                }}>Remove</button>\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport Slider from 'react-slick';\n\nexport default function RecentCarousal({ children }) {\n    var newsTemplate;\n    var settings = {\n        dots: false,\n        infinite: true,\n        slidesToShow: children.length >= 4 ? 4 : children.length,\n        slidesToScroll: 1,\n    }\n    return (\n        <div>\n            <Slider {...settings} arrows>\n                {children}\n            </Slider>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport Helper from '../lib/helper';\nimport { MoreHoriz as MoreHorizIcon } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\n\nexport default function SuggestionTile({\n    suggestion,\n    playSong,\n    playlists,\n    selectedPlaylist,\n    addToPlaylist,\n    removeFromPlaylist\n}) {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <div\n            onMouseLeave={() => {\n                if (isMenuOpen) {\n                    // setIsMenuOpen(false);\n                }\n            }}\n            className=\"p-2 hover:bg-gray-100 animated flex items-center cursor-pointer\"\n        >\n            <div\n                title={\"Play \" + suggestion.song}\n                className=\"flex items-center justify-between flex-grow\"\n                onClick={() => {\n                    playSong(suggestion);\n                }}>\n                <img src={suggestion.image} className=\"rounded w-12 h-12 border\" alt={suggestion.song} />\n                <div className=\"flex-grow text-gray-800 text-xs truncate pl-2\">\n                    <div>Song: {suggestion.song}</div>\n                    <div>Album: {suggestion.album}</div>\n                    <div>Singers: {suggestion.singers}</div>\n                </div>\n            </div>\n            {/* More Options */}\n            <div className=\"text-gray-500 font-semibold w-16 cursor-pointer relative\">\n                <IconButton className=\"focus:outline-none\" onClick={() => {\n                    setIsMenuOpen(!isMenuOpen);\n                }}>\n                    <MoreHorizIcon className=\"favorite-maker\" />\n                </IconButton>\n                {/* Menu */}\n                {\n                    isMenuOpen && (\n                        <div\n                            className=\"item-menu bg-white shadow-lg py-2 rounded\">\n                            {\n                                playlists.map(playlistName => (\n                                    <button\n                                        key={playlistName}\n                                        onClick={() => {\n                                            addToPlaylist(playlistName, suggestion);\n                                        }}\n                                        className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\">Add to {playlistName}</button>\n                                ))\n                            }\n                            <button className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\"\n                                onClick={() => {\n                                    Helper.downloadSong(suggestion);\n                                }}>Download</button>\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    );\n}","const baseURL = \"https://pru-saavn.herokuapp.com/api\";\n\nconst Endpoints = {\n    search: query => baseURL + \"/search?query=\" + query,\n    signIn: baseURL + \"/google-signin\",\n\n    syncUp: baseURL + \"/sync-up\",\n    syncDown: baseURL + \"/sync-down\",\n}\n\nexport default Endpoints;\n","import React from 'react';\n\nexport default function Loader({ size = \"48px\", color = \"#202020\", className = \"\" }) {\n    return (\n        <div className={className}><span className=\"spinner\" style={{ width: size, height: size, borderRightColor: color }}></span></div>\n    );\n}","import { IconButton } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport debounce from 'lodash/debounce';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport SuggestionTile from './suggestion-tile';\r\nimport Endpoints from '../lib/endpoints';\r\nimport Loader from './loader';\r\n\r\nexport default function SearchBox({\r\n    suggestions,\r\n    setSuggestions,\r\n    addToPlaylist,\r\n    playSong,\r\n    playingList,\r\n    selectedPlaylist,\r\n    playlists,\r\n    removeFromPlaylist\r\n}) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const debounceQuery = useCallback(debounce(value => {\r\n        // Search\r\n        setIsLoading(true);\r\n        Axios.get(Endpoints.search(value))\r\n            .then(response => {\r\n                setSuggestions(response.data);\r\n                setIsLoading(false);\r\n            })\r\n    }, 1000), []);\r\n\r\n    const clearSuggestions = _ => {\r\n        setQuery(\"\");\r\n        setSuggestions([]);\r\n    }\r\n\r\n    const selectSong = song => {\r\n        clearSuggestions();\r\n        const songIndex = addToPlaylist(\"Recent\", song);\r\n        if (Number.isInteger(songIndex)) {\r\n            // take a second and play this\r\n            playSong(\"Recent\", songIndex);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onMouseLeave={() => {\r\n                clearSuggestions();\r\n            }}\r\n            className=\"pt-6 py-2 px-10 search-box w-full md:w-1/2\">\r\n            <input value={query}\r\n                className=\"border py-3 px-5 w-full focus:outline-none\"\r\n                style={\r\n                    suggestions.length > 0\r\n                        ? {\r\n                            borderTopLeftRadius: \"0.5em\",\r\n                            borderTopRightRadius: \"0.5em\",\r\n                            borderBottom: \"none\"\r\n                        }\r\n                        : {\r\n                            borderRadius: \"2em\"\r\n                        }\r\n                }\r\n                placeholder=\"Search...\"\r\n                onChange={event => {\r\n                    const { value } = event.target;\r\n                    setQuery(value);\r\n                    if (value.trim()) {\r\n                        debounceQuery(value);\r\n                    } else {\r\n                        // not show any random suggestion on clearing search field\r\n                        debounceQuery.cancel();\r\n                    }\r\n                }} />\r\n            {/* Clear suggestion button */}\r\n            {\r\n                isLoading\r\n                    ? <Loader size=\"24px\" className=\"loading-suggestion\" />\r\n                    : suggestions.length > 0\r\n                        ? (\r\n                            <IconButton className=\"clear-suggestion focus:outline-none\" title=\"Clear Suggestions\"\r\n                                onClick={() => {\r\n                                    clearSuggestions();\r\n                                }}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        )\r\n                        : <span></span>\r\n            }\r\n            {/* Suggestion list */}\r\n            {\r\n                suggestions.length > 0 && (\r\n                    <div className=\"suggestion-box rounded-lg px-10 w-full md:w-1/2\">\r\n                        <div className=\"bg-white py-2 shadow-lg border\">\r\n                            {\r\n                                isLoading\r\n                                    ? <Loader size=\"24px\" className=\"mt-2 w-full flex justify-center\" />\r\n                                    : suggestions.map(suggestion => <SuggestionTile\r\n                                        suggestion={suggestion}\r\n                                        playSong={selectSong}\r\n                                        key={suggestion.id}\r\n                                        playlists={playlists}\r\n                                        selectedPlaylist={selectedPlaylist}\r\n                                        addToPlaylist={addToPlaylist}\r\n                                        removeFromPlaylist={removeFromPlaylist}\r\n                                    />)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport { MoreHoriz as MoreHorizIcon } from '@material-ui/icons'\nimport { IconButton } from '@material-ui/core';\n\nexport default function ItemMenu({ buttons = [], small = false, onClick = e => {} }) {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <span\n            onMouseLeave={() => {\n                setIsMenuOpen(false);\n            }}\n            onClick={onClick}\n            className=\"text-gray-500 font-semibold cursor-pointer relative\">\n            <IconButton className=\"focus:outline-none\"\n                size={small ? \"small\" : \"medium\"}\n                onClick={() => {\n                    setIsMenuOpen(!isMenuOpen);\n                }}>\n                <MoreHorizIcon className=\"favorite-maker\" />\n            </IconButton>\n            {/* Menu */}\n            {\n                isMenuOpen && (\n                    <div\n                        className=\"item-menu bg-white shadow-lg py-2 rounded\">\n                        {\n                            buttons.map((b, index) => (\n                                <button\n                                    key={index}\n                                    onClick={() => {\n                                        b.action();\n                                    }}\n                                    className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\">\n                                    {b.label}\n                                </button>\n                            ))\n                        }\n                    </div>\n                )\n            }\n        </span>\n    )\n}\n","import React from 'react';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\n\nexport const ToastContext = React.createContext(null);\n\nexport const withToast = Component => props => (\n    <ToastContext.Consumer>\n        {\n            toast => <Component {...toast} {...props} />\n        }\n    </ToastContext.Consumer>\n)\n\nexport const ToastNotifier = withToast(({ toasts, removeToast }) => {\n    const getStyle = type => {\n        switch (type) {\n            case 'danger':\n                return 'bg-red-300';\n            case 'success':\n                return 'bg-green-300';\n            case 'warning':\n                return 'bg-orange-300';\n            default:\n                return 'bg-blue-300';\n        }\n    }\n    return (\n        <div className=\"ToastNotifier\">\n            {\n                toasts.map(toast => {\n                    return (\n                        <div className={\"toast items-center flex pl-4 pr-2 py-2 mt-2 rounded text-white \" + getStyle(toast.type)} key={toast.timestamp}>\n                            <div className=\"toast-body flex-grow pr-2\">\n                                <div className=\"toast-title\">{toast.title}</div>\n                                <div className=\"toast-message\">{toast.message}</div>\n                            </div>\n                            <IconButton className=\"focus:outline-none\" title=\"Clear Toast\"\n                                onClick={() => { removeToast(toast) }}>\n                                <CloseIcon fontSize=\"small\" htmlColor=\"white\" />\n                            </IconButton>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    );\n});","import React, { useState } from 'react'\r\nimport { Add as AddIcon } from '@material-ui/icons';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ItemMenu from './item-menu';\r\nimport { withToast } from '../contexts/toast-context';\r\n\r\nfunction SidebarComponent({\r\n    playlists,\r\n    addPlaylist,\r\n    removePlaylist,\r\n    selectPlaylist,\r\n    selectedPlaylist,\r\n    addToast\r\n}) {\r\n\r\n    const [newPlaylistName, setNewPlaylistName] = useState(\"\");\r\n\r\n    // somhow selectPlaylist doesnt directly work in further subcomponents\r\n    const safeSelectPlaylist = playlistName => {\r\n        selectPlaylist(playlistName);\r\n    }\r\n\r\n    const safeRemovePlaylist = playlistName => {\r\n        removePlaylist(playlistName);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar bg-white\">\r\n            <div className=\"p-10 flex flex-col items-center\">\r\n                <img src=\"https://avatars2.githubusercontent.com/u/20546147?s=460&v=4\"\r\n                    className=\"rounded-full w-32 h-32 shadow-lg\" alt={\"Chahar\"} />\r\n                <div className=\"font-bold text-gray-800 text-xl mt-5 text-center\">Chahar</div>\r\n                <div className=\"text-gray-500 text-center\">chaharshubhamsingh</div>\r\n            </div>\r\n            <div className=\"px-4\">\r\n                <div className=\"px-4 mb-5 uppercase font-bold text-gray-500\">My Music</div>\r\n                {\r\n                    Object.keys(playlists).map(playlistName => (\r\n                        <div\r\n                            className={\r\n                                \"px-4 text-gray-800 flex justify-between items-center font-bold py-2 hover:bg-gray-300 my-1 rounded-lg cursor-pointer \" + (playlistName === selectedPlaylist ? \"bg-gray-300\" : \"\")\r\n                            }\r\n                            onClick={() => {\r\n                                selectPlaylist(playlistName);\r\n                            }}\r\n                            key={playlistName}>\r\n                            <span>{playlistName}</span>\r\n                            <ItemMenu onClick={e => e.stopPropagation()} small buttons={[\r\n                                {\r\n                                    action: () => {\r\n                                        safeSelectPlaylist(\"Recent\");\r\n                                        removePlaylist(playlistName);\r\n                                    },\r\n                                    label: \"Remove\"\r\n                                }\r\n                            ]} />\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"relative\">\r\n                    <input\r\n                        className=\"px-4 text-gray-800 font-bold py-2 my-2 bg-gray-100 rounded-lg focus:outline-none\"\r\n                        placeholder=\"Add playlist...\" value={newPlaylistName}\r\n                        onKeyDown={event => {\r\n                            if (event.key === \"Enter\" && event.target.value.length > 0) {\r\n                                addPlaylist(newPlaylistName);\r\n                                setNewPlaylistName(\"\");\r\n                            }\r\n                        }}\r\n                        onChange={event => {\r\n                            setNewPlaylistName(event.target.value);\r\n                        }} />\r\n                    {\r\n                        newPlaylistName && (\r\n                            <IconButton size=\"small\"\r\n                                className=\"focus:outline-none\"\r\n                                onClick={\r\n                                    () => {\r\n                                        addPlaylist(newPlaylistName);\r\n                                        setNewPlaylistName(\"\");\r\n                                    }\r\n                                }\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    right: \"15px\",\r\n                                    top: \"13px\",\r\n                                }}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Sidebar = withToast(SidebarComponent);\r\n\r\nexport default Sidebar;\r\n","export default {\n    googleSignInClientId: \"68653039486-63iqbma47tvrijkuiqbo23gpdc4mbejl.apps.googleusercontent.com\"\n}","import React, { useState } from 'react';\nimport Helper from '../lib/helper';\nimport config from '../lib/config';\nimport GoogleLogin from 'react-google-login';\n\nexport default function SignInAndSync({ onSignIn, onSignInError, user, syncToServer, syncFromServer }) {\n\n    const [isMenuVisible, setIsMenuVisible] = useState(false);\n\n    return (\n        <span className=\"px-4 pt-6\">\n            {\n                user\n                    ? (\n                        <div className=\"relative\"\n                            onMouseLeave={() => {\n                                setIsMenuVisible(false);\n                            }}\n                            onMouseEnter={() => {\n                                setIsMenuVisible(true);\n                            }}>\n                            <span\n                                onClick={() => {\n                                    setIsMenuVisible(!isMenuVisible);\n                                }}\n                                className=\"px-2 mx-2 py-1 cursor-pointer\">{user.name}</span>\n                            {\n                                isMenuVisible && (\n                                    <div\n                                        className=\"bg-white rounded text-gray-800 shadow-lg py-2\"\n                                        style={{\n                                            position: \"absolute\",\n                                            right: \"1rem\",\n                                            zIndex: 5\n                                        }}>\n                                        <div className=\"px-4 py-2 cursor-pointer\">{user.email}</div>\n                                        <div className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\n                                            title=\"Sync playlist to server\"\n                                            onClick={() => {\n                                                syncToServer();\n                                            }}>Sync to server</div>\n                                        <div className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\n                                            title=\"Sync playlist to server\"\n                                            onClick={() => {\n                                                syncFromServer();\n                                            }}>Sync from server</div>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    )\n                    : (\n                        <GoogleLogin\n                            clientId={config.googleSignInClientId}\n                            buttonText=\"Login\"\n                            onSuccess={onSignIn}\n                            render={renderProps => (\n                                <button\n                                    className={\n                                        \"px-2 mx-2 rounded py-1 cursor-pointer shadow \"\n                                        + (renderProps.disabled ? \"bg-gray-200 text-gray-500\" : \"bg-blue-500 text-white\")\n                                    }\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}>Login</button>\n                            )}\n                            onFailure={onSignInError}\n                            isSignedIn={true}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                    )\n            }\n        </span>\n    )\n}\n","import React, { useEffect, useState } from 'react';\r\nimport MusicPlayer from './components/media-player';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { IconButton } from '@material-ui/core';\r\nimport RecentTile from './components/recent-tile';\r\nimport PlaylistItem from './components/playlist-item';\r\nimport RecentCarousal from './components/recent-carousel';\r\nimport SearchBox from './components/search-box';\r\nimport Sidebar from './components/sidebar';\r\nimport Axios from 'axios';\r\nimport Endpoints from './lib/endpoints';\r\nimport SignInAndSync from './components/signin-and-sync';\r\nimport { ToastContext, ToastNotifier } from './contexts/toast-context';\r\n\r\nfunction App() {\r\n\r\n  // The logged in user\r\n  const [user, setUser] = useState(null);\r\n  // currently playing list and its index\r\n  const [playingList, setPlayingList] = useState([\"Recent\", 0]);\r\n  // current shown playlist in app\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState(\"Recent\");\r\n  // list of suggestions in search\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  // the whole list of all the playlists available\r\n  const [playlists, setPlaylists] = useState({\r\n    \"Recent\": [],\r\n    \"Favorite\": []\r\n  });\r\n  // toaster\r\n  const [toasts, setToasts] = useState([]);\r\n  let listeners = [];\r\n\r\n  // Add new playlist to list\r\n  const addPlaylist = (playlistName, playlistContent = []) => {\r\n    const newPlaylists = { ...playlists, [playlistName]: playlistContent };\r\n    updatePlaylists(newPlaylists);\r\n    addToast(\"Added playlist \\\"\" + playlistName + \"\\\"\");\r\n  }\r\n\r\n  // Update an existing playing with new song list\r\n  const updatePlaylist = (playlistName, playlistContent = []) => {\r\n    console.log('updating', { ...playlists, [playlistName]: playlistContent })\r\n    updatePlaylists({ ...playlists, [playlistName]: playlistContent });\r\n    addToast(\"Updated \" + playlistName);\r\n  }\r\n\r\n  // save playlists object to state and localstorage\r\n  const updatePlaylists = newPlaylists => {\r\n    localStorage.setItem('playlists', JSON.stringify(newPlaylists));\r\n    setPlaylists(newPlaylists);\r\n  }\r\n\r\n  // Add song to playlist\r\n  const addToPlaylist = (playlistName, song) => {\r\n    if ((playlistName in playlists)) {\r\n      const oldPlaylist = playlists[playlistName];\r\n      const indexOfSongInOldList = playlists[playlistName].findIndex(s => s.id === song.id);\r\n      if (indexOfSongInOldList < 0) {\r\n        updatePlaylist(playlistName, [...oldPlaylist, song])\r\n        // index at which song is added\r\n        addToast(\"Added \" + song.song + \" to \" + playlistName);\r\n        return oldPlaylist.length;\r\n      } else {\r\n        return indexOfSongInOldList;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove song from a playlist (if needed)\r\n  const removeFromPlaylist = (playlistName, song) => {\r\n    if ((playlistName in playlists)) {\r\n      const index = playlists[playlistName].findIndex(s => s.id === song.id);\r\n      if (index > -1) {\r\n        const newPlaylist = playlists[playlistName];\r\n        newPlaylist.splice(index, 1);\r\n        updatePlaylist(playlistName, newPlaylist);\r\n        addToast(\"Removed \" + song.song + \" from \" + playlistName);\r\n      }\r\n    }\r\n  }\r\n\r\n  // remove a playlist from list\r\n  const removePlaylist = playlistName => {\r\n    // check if it exists\r\n    if (playlistName in playlists) {\r\n      // cannot delete recent and favorite\r\n      if (![\"Recent\", \"Favorite\"].includes(playlistName)) {\r\n        const oldPlaylist = { ...playlists };\r\n        delete oldPlaylist[playlistName];\r\n        console.log('updating', oldPlaylist)\r\n        // if this is selected playlist, set another as selected (recent)\r\n        updatePlaylists(oldPlaylist);\r\n        if (selectedPlaylist === playlistName) {\r\n          setSelectedPlaylist(\"Recent\");\r\n        }\r\n        addToast(\"Removed playlist \\\"\" + playlistName + \"\\\"!\");\r\n      }\r\n    }\r\n  }\r\n\r\n  // Play a given song\r\n  const playSong = (playlistName, songIndex) => {\r\n    console.log(\"playing\", playlistName, songIndex);\r\n    setPlayingList([playlistName, songIndex]);\r\n\r\n    try {\r\n      const song = playlists[playlistName][songIndex];\r\n      if (song) {\r\n        addToast(\"Playing \" + song.song + \" now.\");\r\n        // add to recent if not there\r\n        if (playlists[\"Recent\"].findIndex(r => r.id === song.id) === -1) {\r\n          addToPlaylist(\"Recent\", song);\r\n        }\r\n      }\r\n    } catch (e) { console.log(\"adding to recent failed at playSong\") }\r\n  }\r\n\r\n  // Clear recent songs\r\n  const clearRecents = () => {\r\n    if (playlists[\"Recent\"].length > 0) {\r\n      updatePlaylist(\"Recent\", []);\r\n      addToast(\"Cleared \\\"Recent\\\"\");\r\n    }\r\n  }\r\n\r\n  // Play next song\r\n  const nextSong = () => {\r\n    const [playListName, songIndex] = playingList;\r\n    // check if current index is the last index\r\n    if (songIndex === playlists[playListName].length - 1) {\r\n      // play the first song\r\n      setPlayingList([playListName, 0]);\r\n    } else {\r\n      setPlayingList([playListName, songIndex + 1]);\r\n    }\r\n    addToast(\"Playing next song\");\r\n  };\r\n\r\n  // Play prev song\r\n  const prevSong = () => {\r\n    const [playListName, songIndex] = playingList;\r\n    // check if current index is the first index\r\n    if (songIndex === 0) {\r\n      // play the first song\r\n      setPlayingList([playListName, playlists[playListName].length - 1]);\r\n    } else {\r\n      setPlayingList([playListName, songIndex - 1]);\r\n    }\r\n    addToast(\"Playing previous song\");\r\n  };\r\n\r\n  // google signin\r\n  const onSignIn = googleUser => {\r\n    Axios.get(Endpoints.signIn, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + googleUser.tokenId\r\n      }\r\n    })\r\n      .then(response => {\r\n        const { user } = response.data;\r\n        setUser(user);\r\n        // save the user to localstorage\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        addToast(\"Signed in as \" + user.name, \"\", \"success\");\r\n      })\r\n      .catch(error => {\r\n        addToast(\"Couldn't auto signin!\", \"\", \"danger\");\r\n        console.log({ error });\r\n      })\r\n  }\r\n\r\n  // google signin\r\n  const onSignInError = error => {\r\n    console.error(error);\r\n    addToast(\"Could not sign you in!\");\r\n  }\r\n\r\n  // sync state to server\r\n  const syncToServer = () => {\r\n    addToast(\"Sync to server initiated\");\r\n    Axios.post(Endpoints.syncUp, {\r\n      playlists\r\n    }, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + user.token\r\n      }\r\n    })\r\n      .then(response => {\r\n        addToast(\"Synced to server\", \"\", \"success\");\r\n      }).catch(error => {\r\n        addToast(\"Couldn't sync to server!\");\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n  const syncFromServer = () => {\r\n    addToast(\"Sync from server initiated\");\r\n    Axios.get(Endpoints.syncDown, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + user.token\r\n      }\r\n    })\r\n      .then(response => {\r\n        const { data } = response;\r\n        updatePlaylists(data.playlists);\r\n        addToast(\"Synced from server\", \"\", \"success\");\r\n      })\r\n      .catch(error => {\r\n        addToast(\"Couldn't sync from server!\");\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const addToast = (title = '', message = '', type = '') => {\r\n    const toast = { title, message, type, timestamp: (new Date()).getTime() };\r\n    setToasts([...toasts, toast]);\r\n    listeners.push(setTimeout(() => {\r\n      removeToast(toast);\r\n    }, 3000));\r\n  }\r\n\r\n  const removeToast = toast => {\r\n    const newToast = [...toasts];\r\n    newToast.splice(newToast.find(t => t.timestamp === toast.timestamp), 1);\r\n    setToasts(newToast);\r\n  }\r\n\r\n  // load playlists\r\n  useEffect(() => {\r\n    const playlistFromLocal = localStorage.getItem('playlists');\r\n    let recentPlaylist = [];\r\n    let favoritePlaylist = [];\r\n    const playlistsToUpdate = {};\r\n\r\n    try {\r\n      const parsedPlaylists = JSON.parse(playlistFromLocal);\r\n      // check if parsed Playlist exists\r\n      if (parsedPlaylists && typeof parsedPlaylists === 'object') {\r\n        if ('Recent' in parsedPlaylists) {\r\n          recentPlaylist = parsedPlaylists.Recent;\r\n          delete parsedPlaylists.Recent;\r\n        }\r\n        if (\"Favorite\" in parsedPlaylists) {\r\n          favoritePlaylist = parsedPlaylists.Favorite;\r\n          delete parsedPlaylists.Favorite;\r\n        }\r\n        for (const playlistName in parsedPlaylists) {\r\n          playlistsToUpdate[playlistName] = parsedPlaylists[playlistName];\r\n        }\r\n      }\r\n    } catch (err) {\r\n    }\r\n\r\n    playlistsToUpdate.Recent = recentPlaylist;\r\n    playlistsToUpdate.Favorite = favoritePlaylist;\r\n    // update playlists\r\n    localStorage.setItem('playlists', JSON.stringify(playlistsToUpdate));\r\n    setPlaylists(playlistsToUpdate);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // toaster cleanup\r\n    return () => {\r\n      listeners.forEach(l => {\r\n        clearTimeout(l);\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{\r\n      toasts,\r\n      addToast,\r\n      removeToast\r\n    }}>\r\n      <div className=\"bg-gray-100\">\r\n        {/* sidebar */}\r\n        <Sidebar\r\n          playlists={playlists}\r\n          addPlaylist={addPlaylist}\r\n          selectedPlaylist={selectedPlaylist}\r\n          removePlaylist={removePlaylist}\r\n          selectPlaylist={playlistName => {\r\n            setSelectedPlaylist(playlistName);\r\n          }} />\r\n        {/* main area */}\r\n        <div className=\"main\">\r\n          <div className=\"flex justify-between items-center\">\r\n            {/* Search field */}\r\n            <SearchBox\r\n              suggestions={suggestions}\r\n              setSuggestions={setSuggestions}\r\n              addToPlaylist={addToPlaylist}\r\n              playSong={playSong}\r\n              playingList={playingList}\r\n              selectedPlaylist={selectedPlaylist}\r\n              playlists={Object.keys(playlists)}\r\n              removeFromPlaylist={removeFromPlaylist}\r\n            />\r\n            {/* Other options */}\r\n            <SignInAndSync\r\n              onSignIn={onSignIn}\r\n              onSignInError={onSignInError}\r\n              syncToServer={syncToServer}\r\n              syncFromServer={syncFromServer}\r\n              user={user} />\r\n          </div>\r\n          {/* Main Content */}\r\n          <div className=\"pl-10 pt-3 flex pb-48\">\r\n            <div className=\"md:w-3/5 w-full\">\r\n              {/* recent */}\r\n              {\r\n                playlists[\"Recent\"].length > 0 && (\r\n                  <div>\r\n                    <div className=\"flex items-center\">\r\n                      <span className=\"text-xl font-bold text-gray-800 mr-3\">Recent Played</span>\r\n                      <IconButton typeof=\"danger\" className=\"focus:outline-none\" onClick={() => {\r\n                        clearRecents();\r\n                      }}><CloseIcon fontSize=\"small\" /></IconButton>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                      <RecentCarousal>\r\n                        {\r\n                          playlists[\"Recent\"].map((recent, index) => <RecentTile recent={recent} songIndex={index} playSong={playSong} key={recent.id} />)\r\n                        }\r\n                      </RecentCarousal>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n              <div className=\"py-5\">\r\n                {/* Song List */}\r\n                <h1 className=\"text-xl font-bold text-gray-800\">\r\n                  {selectedPlaylist ? selectedPlaylist : \"No playlist selected\"}\r\n                </h1>\r\n                <span className=\"font-bold text-gray-500 text-xs\">\r\n                  {selectedPlaylist && playlists[selectedPlaylist] ? playlists[selectedPlaylist].length : \"0\"} Song(s)\r\n              </span>\r\n                <div className=\"py-2\">\r\n                  {\r\n                    selectedPlaylist && playlists[selectedPlaylist]\r\n                    && playlists[selectedPlaylist].map((song, index) => <PlaylistItem\r\n                      song={song}\r\n                      songIndex={index}\r\n                      playSong={playSong}\r\n                      key={song.id}\r\n                      playingList={playingList}\r\n                      selectedPlaylist={selectedPlaylist}\r\n                      playlists={Object.keys(playlists)}\r\n                      addToPlaylist={addToPlaylist}\r\n                      removeFromPlaylist={removeFromPlaylist}\r\n                    />)\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"md:w-2/5 w-full px-5\">\r\n              <h1 className=\"text-xl font-bold text-gray-800\">Now Playing &gt; {playingList[0]}</h1>\r\n              <span className=\"font-bold text-gray-500 text-xs\">{playlists[playingList[0]].length} Song(s) on the list</span>\r\n              <div className=\"py-2\">\r\n                <MusicPlayer\r\n                  song={playlists[playingList[0]][playingList[1]]}\r\n                  nextSong={nextSong}\r\n                  prevSong={prevSong}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastNotifier />\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}