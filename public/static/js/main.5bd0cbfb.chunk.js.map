{"version":3,"sources":["config/helper.js","components/media-player.js","components/recent-tile.js","components/playlist-item.js","components/recent-carousel.js","components/suggestion-tile.js","config/endpoints.js","components/loader.js","components/search-box.js","components/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Helper","unescape","data","span","document","createElement","innerHTML","innerText","formatSeconds","timeInSeconds","minutes","parseInt","toString","seconds","length","repeat","completionPercentage","currentTime","duration","defaultSong","song","singers","play_count","media_url","label","image","MusicPlayer","nextSong","prevSong","useState","setPaused","volume","setVolume","setDuration","setCurrentTime","Audio","player","setPlayer","useEffect","audioPlayer","onloadedmetadata","event","play","onerror","error","console","log","code","message","src","Date","getTime","load","ontimeupdate","target","info","pause","removeAttribute","className","style","width","height","paused","Slider","value","onChange","time","title","onClick","Grid","item","xs","margin","color","v","aria-labelledby","RecentTile","recent","playSong","image_500","album","PlaylistItem","songIndex","selectedPlaylist","playlists","addToPlaylist","removeFromPlaylist","isMenuOpen","setIsMenuOpen","onMouseLeave","IconButton","Favorite","htmlColor","isFavorite","MoreHoriz","map","playlistName","key","RecentCarousal","children","settings","dots","infinite","slidesToShow","slidesToScroll","arrows","SuggestionTile","suggestion","Endpoints","search","query","baseURL","Loader","size","borderRightColor","SearchBox","suggestions","setSuggestions","isLoading","setIsLoading","setQuery","debounceQuery","useCallback","debounce","Axios","get","then","response","clearSuggestions","_","selectSong","Number","isInteger","borderTopLeftRadius","borderTopRightRadius","borderBottom","borderRadius","placeholder","trim","cancel","fontSize","id","Sidebar","addPlaylist","selectPlaylist","newPlaylistName","setNewPlaylistName","Object","keys","position","right","top","Add","App","playingList","setPlayingList","setSelectedPlaylist","setPlaylists","updatePlaylist","playlistContent","updatePlaylists","newPlaylists","localStorage","setItem","JSON","stringify","oldPlaylist","indexOfSongInOldList","findIndex","s","index","newPlaylist","splice","r","e","playlistFromLocal","getItem","recentPlaylist","favoritePlaylist","playlistsToUpdate","parsedPlaylists","parse","Recent","err","typeof","playListName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5bd0cbfb.chunk.js","sourcesContent":["const Helper = {\n    unescape: data => {\n        const span = document.createElement('span');\n        span.innerHTML = data;\n        return span.innerText;\n    },\n    formatSeconds: (timeInSeconds = 0) => {\n        let minutes = parseInt(timeInSeconds / 60).toString();\n        let seconds = parseInt(timeInSeconds % 60).toString();\n\n        if (minutes.length < 2) {\n            minutes = \"0\".repeat(2 - minutes.length) + minutes;\n        }\n\n        if (seconds.length < 2) {\n            seconds = \"0\".repeat(2 - seconds.length) + seconds;\n        }\n\n        return minutes + \":\" + seconds;\n    },\n    completionPercentage: (currentTime, duration) => (currentTime / duration) * 100,\n}\nexport default Helper;","import React, { useEffect, useState } from 'react'\nimport Helper from '../config/helper';\nimport { Grid, IconButton, Slider } from '@material-ui/core';\n\n\n\nconst defaultSong = {\n    song: \"Some Song\",\n    singers: \"Some Singer\",\n    play_count: 9999999,\n    media_url: \"\",\n    label: \"Some Label\",\n    image: \"https://images.unsplash.com/photo-1573247353133-0290e4606fbf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n}\n\nexport default function MusicPlayer({ song, nextSong, prevSong }) {\n\n    if(!song) {\n        song = defaultSong;\n    }\n\n    // player internal states\n    const [paused, setPaused] = useState(true);\n    const [volume, setVolume] = useState(0.3);\n    const [duration, setDuration] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n\n    const [player, setPlayer] = useState(new Audio());\n\n    // Load the song and initialize the player\n    useEffect(() => {\n        if (song) {\n            const audioPlayer = new Audio(song.media_url);\n            audioPlayer.volume = volume;\n            setPlayer(audioPlayer);\n        }\n    }, [song]);\n\n    useEffect(() => {\n        if (player) {\n            // after loading metadata\n            player.onloadedmetadata = event => {\n                setDuration(player.duration);\n                setCurrentTime(player.currentTime);\n                play();\n            };\n\n            player.onerror = error => {\n                error = player.error;\n                console.log(\"Error \" + player.error.code + \"; details: \" + player.error.message);\n                // restart the player on fragment error;\n                if (error.code === 2) {\n                    player.src = song.media_url + \"?v=\" + (new Date()).getTime();\n                    player.load();\n                    player.play();\n                }\n            }\n\n            // on time update\n            player.ontimeupdate = event => {\n                setCurrentTime(event.target.currentTime);\n            }\n        }\n        console.info(\"Player updated!\");\n\n        // cleanup\n        return () => {\n            player.pause();\n            player.removeAttribute('src');\n            player.load();\n        };\n    }, [player]);\n\n    // If song isnt there, or src is not set, return error\n    if (!song || !(player && player.src)) {\n        return <span>Please choose a song!</span>;\n    }\n\n    // Set state to playing\n    const play = () => {\n        setPaused(false);\n        return player.play();\n    };\n\n    // Set state to paused\n    const pause = () => {\n        setPaused(true);\n        return player.pause();\n    }\n\n    const changeVolume = v => {\n        player.volume = v;\n        setVolume(v);\n    }\n\n    const changeCurrentTime = time => {\n        player.currentTime = time;\n        setCurrentTime(time);\n    }\n\n    return (\n        <div className=\"player bg-white shadow rounded-lg p-5\">\n\n            <div className=\"player-card px-8 text-center bg-white p-3 rounded-lg\">\n                {/* song art and detail */}\n                <div className=\"beat-box mx-auto my-3 flex justify-center items-center\" style={{ width: \"150px\", height: \"150px\" }}>\n                    <img src={song.image} style={{ width: \"150px\", height: \"150px\" }} className={\"rounded-full shadow-lg mx-auto mb-5 \" + (player.paused ? \"\" : \"heart-beat\")} />\n                </div>\n                <div className=\"font-bold text-gray-800\">\n                    {Helper.unescape(song.song)}\n                </div>\n                <div className=\"text-gray-500 text-xs\">\n                    {Helper.unescape(song.singers)}\n                </div>\n                {/* Seeker */}\n                <Slider\n                    value={Helper.completionPercentage(currentTime, duration)}\n                    onChange={(event, value) => {\n                        changeCurrentTime(duration * (value / 100));\n                    }}\n                />\n                {/* Time and stuff */}\n                <div className=\"flex justify-between text-gray-500 text-xxs\">\n                    <span>{Helper.formatSeconds(currentTime)}</span>\n                    <span>{Helper.formatSeconds(duration)}</span>\n                </div>\n            </div>\n            <div className=\"flex justify-center mt-4\">\n                {/* Controls */}\n                <div className=\"flex items-center\">\n                    <i className=\"icon icon-to-start cursor-pointer text-gray-600 hover:text-red-500\" title=\"Play Previous\" onClick={() => { prevSong() }}></i>\n                    <div className=\"play-pause-overlay p-2 shadow rounded-full m-5\">\n                        {\n                            player.paused\n                                ? <i className=\"text-xl icon icon-play bg-white cursor-pointer text-gray-800 hover:bg-red-500 hover:text-white flex justify-center items-center rounded-full text-center w-10 h-10 play-button\" title=\"Play\" onClick={() => { play() }}></i>\n                                : <i className=\"text-xl icon icon-pause bg-white cursor-pointer text-gray-800 hover:bg-red-500 hover:text-white flex justify-center items-center rounded-full text-center w-10 h-10 pause-button\" title=\"Pause\" onClick={() => { pause() }}></i>\n                        }\n                    </div>\n                    <i className=\"icon icon-to-end cursor-pointer text-gray-600 hover:text-red-500\" title=\"Play Next\" onClick={() => { nextSong() }}></i>\n                </div>\n                {/* More Details */}\n                <div className=\"flex items-center text-xs text-gray-500\">\n                    {/* Volume slider */}\n                    <Grid item xs style={{ margin: '5px 0 0 1.25rem' }}>\n                        <Slider\n                            value={volume * 100}\n                            color=\"primary\"\n                            onChange={(event, value) => {\n                                changeVolume(value / 100);\n                            }} aria-labelledby=\"continuous-slider\" style={{ width: \"100px\" }} />\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction formatCount(count) {\n    return count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React from 'react';\nimport Helper from '../config/helper';\n\nexport default function RecentTile({ recent, playSong }) {\n    return (\n        <div\n            className=\"pr-5 cursor-pointer\"\n            title={\"Play \" + recent.song}\n            onClick={() => {\n                playSong(recent);\n            }}>\n            <div style={{\n                height: \"150px\",\n                width: \"150px\"\n            }} className=\"mb-3\">\n                <img src={recent.image_500 ? recent.image_500 : recent.image} className=\"shadow rounded-lg\" />\n            </div>\n            <div className=\"text-gray-800 text-sm truncate\">\n                <div className=\"font-bold\">\n                    {Helper.unescape(recent.song)}\n                </div>\n                <div className=\"text-gray-500 text-xs\">\n                    Album: {Helper.unescape(recent.album)}\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport Helper from '../config/helper';\nimport { Favorite, MoreHoriz as MoreHorizIcon } from '@material-ui/icons'\nimport { IconButton } from '@material-ui/core';\n\nexport default function PlaylistItem({\n    song,\n    songIndex,\n    playSong,\n    selectedPlaylist,\n    playlists,\n    addToPlaylist,\n    removeFromPlaylist\n}) {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <div\n            onMouseLeave={() => {\n                if (isMenuOpen) {\n                    setIsMenuOpen(false);\n                }\n            }}\n            className=\"px-2 py-2 bg-white playlist-item rounded my-3 flex items-center hover:shadow-lg\">\n            <span className=\"font-bold mx-3\">01</span>\n            <img src={song.image} className=\"rounded w-12 h-12 border\" />\n            <i className=\"icon icon-play text-gray-300 mx-1\"></i>\n            <div title={\"Play \" + song.song}\n                className=\"font-bold truncate w-56 flex-grow pr-3 flex-shrink-0 cursor-pointer\"\n                onClick={() => {\n                    playSong(selectedPlaylist, songIndex);\n                }}>{song.song}</div>\n            <div className=\"text-gray-500 font-semibold w-48 truncate flex-shrink-0\">{song.singers}</div>\n            <div className=\"text-gray-500 font-semibold w-24\">{Helper.formatSeconds(song.duration)}</div>\n            <div className=\"text-gray-500 font-semibold w-16 cursor-pointer\">\n                <IconButton className=\"focus:outline-none\" onClick={() => {\n                    addToPlaylist(\"Favorite\", song);\n                }}>\n                    <Favorite htmlColor={song.isFavorite ? \"red\" : \"#ddd\"}\n                        className=\"favorite-maker\" />\n                </IconButton>\n            </div>\n            <div className=\"text-gray-500 font-semibold w-16 cursor-pointer relative\">\n                <IconButton className=\"focus:outline-none\" onClick={() => {\n                    setIsMenuOpen(!isMenuOpen);\n                }}>\n                    <MoreHorizIcon className=\"favorite-maker\" />\n                </IconButton>\n                {/* Menu */}\n                {\n                    isMenuOpen && (\n                        <div\n                            className=\"playlist-item-menu bg-white shadow-lg py-2 rounded\">\n                            {\n                                playlists.map(playlistName => (\n                                    <button\n                                        key={playlistName}\n                                        onClick={() => {\n                                            addToPlaylist(playlistName, song);\n                                        }}\n                                        className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200 focus:outline-none\">Add to {playlistName}</button>\n                                ))\n                            }\n                            <button className=\"px-3 py-2 text-left text-sm block w-full hover:bg-gray-200\"\n                                onClick={() => {\n                                    removeFromPlaylist(selectedPlaylist, song);\n                                }}>Remove</button>\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport Slider from 'react-slick';\n\nexport default function RecentCarousal({ children }) {\n    var newsTemplate;\n    var settings = {\n        dots: false,\n        infinite: true,\n        slidesToShow: children.length >= 4 ? 4 : children.length,\n        slidesToScroll: 1,\n    }\n    return (\n        <div>\n            <Slider {...settings} arrows>\n                {children}\n            </Slider>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default function SuggestionTile({ suggestion, playSong }) {\n    return (\n        <div className=\"p-2 hover:bg-gray-100 animated flex items-center cursor-pointer\"\n            title={\"Play \" + suggestion.song} onClick={() => {\n                playSong(suggestion);\n            }}>\n            <img src={suggestion.image} className=\"rounded w-12 h-12 border\" />\n            <div className=\"flex-grow text-gray-800 text-xs truncate pl-2\">\n                <div>Song: {suggestion.song}</div>\n                <div>Album: {suggestion.album}</div>\n                <div>Singers: {suggestion.singers}</div>\n            </div>\n        </div>\n    );\n}","const baseURL = \"http://localhost:3100/api\";\n\nconst Endpoints = {\n    search: query => baseURL + \"/search?query=\" + query\n}\n\nexport default Endpoints;\n","import React from 'react';\n\nexport default function Loader({ size = \"48px\", color = \"#202020\", className = \"\" }) {\n    return (\n        <div className={className}><span className=\"spinner\" style={{ width: size, height: size, borderRightColor: color }}></span></div>\n    );\n}","import { IconButton } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport debounce from 'lodash/debounce';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SuggestionTile from './suggestion-tile';\r\nimport Endpoints from '../config/endpoints';\r\nimport Loader from './loader';\r\n\r\nexport default function SearchBox({ suggestions, setSuggestions, addToPlaylist, playSong }) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const debounceQuery = useCallback(debounce(value => {\r\n        // Search\r\n        setIsLoading(true);\r\n        Axios.get(Endpoints.search(value))\r\n            .then(response => {\r\n                setSuggestions(response.data);\r\n                setIsLoading(false);\r\n            })\r\n    }, 1000), []);\r\n\r\n    const clearSuggestions = _ => {\r\n        setQuery(\"\");\r\n        setSuggestions([]);\r\n    }\r\n\r\n    const selectSong = song => {\r\n        clearSuggestions();\r\n        const songIndex = addToPlaylist(\"Recent\", song);\r\n        if (Number.isInteger(songIndex)) {\r\n            // take a second and play this\r\n            playSong(\"Recent\", songIndex);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onMouseLeave={() => {\r\n                clearSuggestions();\r\n            }}\r\n            className=\"pt-6 py-2 px-10 search-box\">\r\n            <input value={query}\r\n                className=\"border py-3 px-5 w-full md:w-1/2 focus:outline-none\"\r\n                style={\r\n                    suggestions.length > 0\r\n                        ? {\r\n                            borderTopLeftRadius: \"0.5em\",\r\n                            borderTopRightRadius: \"0.5em\",\r\n                            borderBottom: \"none\"\r\n                        }\r\n                        : {\r\n                            borderRadius: \"2em\"\r\n                        }\r\n                }\r\n                placeholder=\"Search...\"\r\n                onChange={event => {\r\n                    const { value } = event.target;\r\n                    setQuery(value);\r\n                    if (value.trim()) {\r\n                        debounceQuery(value);\r\n                    } else {\r\n                        // not show any random suggestion on clearing search field\r\n                        debounceQuery.cancel();\r\n                    }\r\n                }} />\r\n            {/* Clear suggestion button */}\r\n            {\r\n                isLoading\r\n                    ? <Loader size=\"24px\" className=\"loading-suggestion\" />\r\n                    : suggestions.length > 0\r\n                        ? (\r\n                            <IconButton className=\"clear-suggestion focus:outline-none\" title=\"Clear Suggestions\"\r\n                                onClick={() => {\r\n                                    clearSuggestions();\r\n                                }}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        )\r\n                        : <span></span>\r\n            }\r\n            {/* Suggestion list */}\r\n            {\r\n                suggestions.length > 0 && (\r\n                    <div className=\"suggestion-box rounded-lg pr-10 w-full md:w-1/2\">\r\n                        <div className=\"bg-white py-2 shadow-lg border\">\r\n                            {\r\n                                isLoading\r\n                                    ? <Loader size=\"24px\" className=\"mt-2 w-full flex justify-center\" />\r\n                                    : suggestions.map(suggestion => <SuggestionTile suggestion={suggestion} playSong={selectSong} key={suggestion.id} />)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Add as AddIcon } from '@material-ui/icons';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nexport default function Sidebar({ playlists, addPlaylist, selectPlaylist, selectedPlaylist }) {\r\n\r\n    const [newPlaylistName, setNewPlaylistName] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"sidebar bg-white\">\r\n            <div className=\"p-10 flex flex-col items-center\">\r\n                <img src=\"https://avatars2.githubusercontent.com/u/20546147?s=460&v=4\"\r\n                    className=\"rounded-full w-32 h-32 shadow-lg\" />\r\n                <div className=\"font-bold text-gray-800 text-xl mt-5 text-center\">Chahar</div>\r\n                <div className=\"text-gray-500 text-center\">chaharshubhamsingh</div>\r\n            </div>\r\n            <div className=\"px-4\">\r\n                <div className=\"px-4 mb-5 uppercase font-bold text-gray-500\">My Music</div>\r\n                {\r\n                    Object.keys(playlists).map(playlistName => (\r\n                        <div\r\n                            className={\r\n                                \"px-4 text-gray-800 font-bold py-2 hover:bg-gray-300 my-1 rounded-lg cursor-pointer \" + (playlistName === selectedPlaylist ? \"bg-gray-300\" : \"\")\r\n                            }\r\n                            onClick={() => {\r\n                                selectPlaylist(playlistName);\r\n                            }}\r\n                            key={playlistName}>\r\n                            {playlistName}\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"relative\">\r\n                    <input\r\n                        className=\"px-4 text-gray-800 font-bold py-2 my-2 bg-gray-100 rounded-lg focus:outline-none\"\r\n                        placeholder=\"Add playlist...\" value={newPlaylistName} onChange={event => {\r\n                            setNewPlaylistName(event.target.value);\r\n                        }} />\r\n                    {\r\n                        newPlaylistName && (\r\n                            <IconButton size=\"small\"\r\n                            className=\"focus:outline-none\"\r\n                            onClick={\r\n                                () => {\r\n                                    addPlaylist(newPlaylistName)\r\n                                    setNewPlaylistName(\"\")\r\n                                }\r\n                            }\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    right: \"15px\",\r\n                                    top: \"13px\",\r\n                                }}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport MusicPlayer from './components/media-player';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport RecentTile from './components/recent-tile';\r\nimport PlaylistItem from './components/playlist-item';\r\nimport RecentCarousal from './components/recent-carousel';\r\nimport SearchBox from './components/search-box';\r\nimport Sidebar from './components/sidebar';\r\n\r\nfunction App() {\r\n\r\n  // currently playing list and its index\r\n  const [playingList, setPlayingList] = useState([\"Recent\", 0]);\r\n  // current shown playlist in app\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState(\"Recent\");\r\n  // list of suggestions in search\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  // the whole list of all the playlists available\r\n  const [playlists, setPlaylists] = useState({\r\n    \"Recent\": [],\r\n    \"Favorite\": []\r\n  });\r\n\r\n  // Add new playlist to list\r\n  const addPlaylist = (playlistName, playlistContent = []) => {\r\n    const newPlaylists = { ...playlists, [playlistName]: playlistContent };\r\n    updatePlaylists(newPlaylists);\r\n  }\r\n\r\n  // Update an existing playing with new song list\r\n  const updatePlaylist = (playlistName, playlistContent = []) => {\r\n    console.log('updating', { ...playlists, [playlistName]: playlistContent })\r\n    updatePlaylists({ ...playlists, [playlistName]: playlistContent });\r\n  }\r\n\r\n  // save playlists object to state and localstorage\r\n  const updatePlaylists = newPlaylists => {\r\n    localStorage.setItem('playlists', JSON.stringify(newPlaylists));\r\n    setPlaylists(newPlaylists);\r\n  }\r\n\r\n  // Add song to playlist\r\n  const addToPlaylist = (playlistName, song) => {\r\n    if ((playlistName in playlists)) {\r\n      const oldPlaylist = playlists[playlistName];\r\n      const indexOfSongInOldList = playlists[playlistName].findIndex(s => s.id === song.id);\r\n      if (indexOfSongInOldList < 0) {\r\n        updatePlaylist(playlistName, [...oldPlaylist, song])\r\n        // index at which song is added\r\n        return oldPlaylist.length;\r\n      } else {\r\n        return indexOfSongInOldList;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove song from a playlist (if needed)\r\n  const removeFromPlaylist = (playlistName, song) => {\r\n    if ((playlistName in playlists)) {\r\n      const index = playlists[playlistName].findIndex(s => s.id === song.id);\r\n      if (index > -1) {\r\n        const newPlaylist = playlists[playlistName];\r\n        newPlaylist.splice(index, 1);\r\n        updatePlaylist(playlistName, newPlaylist);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Play a given song\r\n  const playSong = (playlistName, songIndex) => {\r\n    setPlayingList([playlistName, songIndex]);\r\n    try {\r\n      const song = playlists[playlistName][songIndex];\r\n      if (song) {\r\n        // add to recent if not there\r\n        if (playlists[\"Recent\"].findIndex(r => r.id === song.id) === -1) {\r\n          addToPlaylist(\"Recent\", song);\r\n        }\r\n      }\r\n    } catch (e) { console.log(\"adding to recent failed at playSong\") }\r\n  }\r\n\r\n  const addToFav = song => {\r\n    addToPlaylist(\"Favorite\", song);\r\n  }\r\n\r\n  // Clear recent songs\r\n  const clearRecents = () => {\r\n    if (playlists[\"Recent\"].length > 0) {\r\n      updatePlaylist(\"Recent\", []);\r\n    }\r\n  }\r\n\r\n  // Play next song\r\n  const nextSong = () => {\r\n    const [playListName, songIndex] = playingList;\r\n    // check if current index is the last index\r\n    if (songIndex === playlists[playListName].length - 1) {\r\n      // play the first song\r\n      setPlayingList([playListName, 0]);\r\n    } else {\r\n      setPlayingList([playListName, songIndex + 1]);\r\n    }\r\n  };\r\n\r\n  // Play prev song\r\n  const prevSong = () => {\r\n    const [playListName, songIndex] = playingList;\r\n    // check if current index is the first index\r\n    if (songIndex === 0) {\r\n      // play the first song\r\n      setPlayingList([playListName, playlists[playListName].length - 1]);\r\n    } else {\r\n      setPlayingList([playListName, songIndex - 1]);\r\n    }\r\n  };\r\n\r\n  // load playlists\r\n  useEffect(() => {\r\n    const playlistFromLocal = localStorage.getItem('playlists');\r\n    let recentPlaylist = [];\r\n    let favoritePlaylist = [];\r\n    const playlistsToUpdate = {};\r\n\r\n    try {\r\n      const parsedPlaylists = JSON.parse(playlistFromLocal);\r\n      // check if parsed Playlist exists\r\n      if (parsedPlaylists && typeof parsedPlaylists === 'object') {\r\n        if ('Recent' in parsedPlaylists) {\r\n          recentPlaylist = parsedPlaylists.Recent;\r\n          delete parsedPlaylists.Recent;\r\n        }\r\n        if (\"Favorite\" in parsedPlaylists) {\r\n          favoritePlaylist = parsedPlaylists.Favorite;\r\n          delete parsedPlaylists.Favorite;\r\n        }\r\n        for (const playlistName in parsedPlaylists) {\r\n          playlistsToUpdate[playlistName] = parsedPlaylists[playlistName];\r\n        }\r\n      }\r\n    } catch (err) {\r\n    }\r\n\r\n    playlistsToUpdate.Recent = recentPlaylist;\r\n    playlistsToUpdate.Favorite = favoritePlaylist;\r\n    // update playlists\r\n    localStorage.setItem('playlists', JSON.stringify(playlistsToUpdate));\r\n    setPlaylists(playlistsToUpdate);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n      {/* sidebar */}\r\n      <Sidebar\r\n        playlists={playlists}\r\n        addPlaylist={addPlaylist}\r\n        selectedPlaylist={selectedPlaylist}\r\n        selectPlaylist={playlistName => {\r\n          setSelectedPlaylist(playlistName);\r\n        }} />\r\n      {/* main area */}\r\n      <div className=\"main\">\r\n        {/* Search field */}\r\n        <SearchBox\r\n          suggestions={suggestions}\r\n          setSuggestions={setSuggestions}\r\n          addToPlaylist={addToPlaylist}\r\n          playSong={playSong} />\r\n        {/* Main Content */}\r\n        <div className=\"pl-10 pt-3 flex pb-48\">\r\n          <div className=\"md:w-3/5 w-full\">\r\n            {/* recent */}\r\n            {\r\n              playlists[\"Recent\"].length > 0 && (\r\n                <div>\r\n                  <div className=\"flex items-center\">\r\n                    <span className=\"text-xl font-bold text-gray-800 mr-3\">Recent Played</span>\r\n                    <IconButton typeof=\"danger\" className=\"focus:outline-none\" onClick={() => {\r\n                      clearRecents();\r\n                    }}><CloseIcon fontSize=\"small\" /></IconButton>\r\n                  </div>\r\n                  <div className=\"mt-3\">\r\n                    <RecentCarousal>\r\n                      {\r\n                        playlists[\"Recent\"].map(recent => <RecentTile recent={recent} playSong={playSong} key={recent.id} />)\r\n                      }\r\n                    </RecentCarousal>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n            <div className=\"py-5\">\r\n              {/* Song List */}\r\n              <h1 className=\"text-xl font-bold text-gray-800\">\r\n                {selectedPlaylist ? selectedPlaylist : \"No playlist selected\"}\r\n              </h1>\r\n              <span className=\"font-bold text-gray-500 text-xs\">\r\n                {selectedPlaylist ? playlists[selectedPlaylist].length : \"0\"} Song(s)\r\n              </span>\r\n              <div className=\"py-2\">\r\n                {\r\n                  selectedPlaylist\r\n                  && playlists[selectedPlaylist].map((song, index) => <PlaylistItem\r\n                    song={song}\r\n                    songIndex={index}\r\n                    playSong={playSong}\r\n                    key={song.id}\r\n                    selectedPlaylist={selectedPlaylist}\r\n                    playlists={Object.keys(playlists)}\r\n                    addToPlaylist={addToPlaylist}\r\n                    removeFromPlaylist={removeFromPlaylist}\r\n                  />)\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"md:w-2/5 w-full px-5\">\r\n            <h1 className=\"text-xl font-bold text-gray-800\">Now Playing</h1>\r\n            <span className=\"font-bold text-gray-500 text-xs\">50 Songs on the list</span>\r\n            <div className=\"py-2\">\r\n              <MusicPlayer\r\n                song={playlists[playingList[0]][playingList[1]]}\r\n                nextSong={nextSong}\r\n                prevSong={prevSong}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}